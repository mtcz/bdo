<?php
/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetCollectingPrintingPageResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'WasteRegisterPublic.Api.ApiModels.Responses.WasteRegister.WreckWasteRecordCard.V1.GetCollectingPrintingPageResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'card_number' => 'string',
        'calendar_year' => 'string',
        'waste_code_and_description' => 'string',
        'company_name' => 'string',
        'company_adress' => 'string',
        'company_identification_number' => 'string',
        'company_nip' => 'string',
        'company_nip_eu' => 'string',
        'eup_name' => 'string',
        'eup_identification_number' => 'string',
        'eup_adress' => 'string',
        'items_list' => '\Swagger\Client\Model\WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1KepwCollectingPrintingPageList[]',
        'received_vehicle_mass_sum' => 'double',
        'received_vehicles_count_sum' => 'int',
        'transferred_vehicle_mass_sum' => 'double',
        'transferred_vehicles_count_sum' => 'int',
        'waste_code_extended' => 'bool',
        'waste_code_extended_description' => 'string',
        'hazardous_waste_reclassification' => 'bool',
        'hazardous_waste_reclassification_description' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'card_number' => null,
        'calendar_year' => null,
        'waste_code_and_description' => null,
        'company_name' => null,
        'company_adress' => null,
        'company_identification_number' => null,
        'company_nip' => null,
        'company_nip_eu' => null,
        'eup_name' => null,
        'eup_identification_number' => null,
        'eup_adress' => null,
        'items_list' => null,
        'received_vehicle_mass_sum' => 'double',
        'received_vehicles_count_sum' => 'int32',
        'transferred_vehicle_mass_sum' => 'double',
        'transferred_vehicles_count_sum' => 'int32',
        'waste_code_extended' => null,
        'waste_code_extended_description' => null,
        'hazardous_waste_reclassification' => null,
        'hazardous_waste_reclassification_description' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'card_number' => 'cardNumber',
        'calendar_year' => 'calendarYear',
        'waste_code_and_description' => 'wasteCodeAndDescription',
        'company_name' => 'companyName',
        'company_adress' => 'companyAdress',
        'company_identification_number' => 'companyIdentificationNumber',
        'company_nip' => 'companyNip',
        'company_nip_eu' => 'companyNipEu',
        'eup_name' => 'eupName',
        'eup_identification_number' => 'eupIdentificationNumber',
        'eup_adress' => 'eupAdress',
        'items_list' => 'itemsList',
        'received_vehicle_mass_sum' => 'receivedVehicleMassSum',
        'received_vehicles_count_sum' => 'receivedVehiclesCountSum',
        'transferred_vehicle_mass_sum' => 'transferredVehicleMassSum',
        'transferred_vehicles_count_sum' => 'transferredVehiclesCountSum',
        'waste_code_extended' => 'wasteCodeExtended',
        'waste_code_extended_description' => 'wasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'hazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'hazardousWasteReclassificationDescription'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'card_number' => 'setCardNumber',
        'calendar_year' => 'setCalendarYear',
        'waste_code_and_description' => 'setWasteCodeAndDescription',
        'company_name' => 'setCompanyName',
        'company_adress' => 'setCompanyAdress',
        'company_identification_number' => 'setCompanyIdentificationNumber',
        'company_nip' => 'setCompanyNip',
        'company_nip_eu' => 'setCompanyNipEu',
        'eup_name' => 'setEupName',
        'eup_identification_number' => 'setEupIdentificationNumber',
        'eup_adress' => 'setEupAdress',
        'items_list' => 'setItemsList',
        'received_vehicle_mass_sum' => 'setReceivedVehicleMassSum',
        'received_vehicles_count_sum' => 'setReceivedVehiclesCountSum',
        'transferred_vehicle_mass_sum' => 'setTransferredVehicleMassSum',
        'transferred_vehicles_count_sum' => 'setTransferredVehiclesCountSum',
        'waste_code_extended' => 'setWasteCodeExtended',
        'waste_code_extended_description' => 'setWasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'setHazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'setHazardousWasteReclassificationDescription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'card_number' => 'getCardNumber',
        'calendar_year' => 'getCalendarYear',
        'waste_code_and_description' => 'getWasteCodeAndDescription',
        'company_name' => 'getCompanyName',
        'company_adress' => 'getCompanyAdress',
        'company_identification_number' => 'getCompanyIdentificationNumber',
        'company_nip' => 'getCompanyNip',
        'company_nip_eu' => 'getCompanyNipEu',
        'eup_name' => 'getEupName',
        'eup_identification_number' => 'getEupIdentificationNumber',
        'eup_adress' => 'getEupAdress',
        'items_list' => 'getItemsList',
        'received_vehicle_mass_sum' => 'getReceivedVehicleMassSum',
        'received_vehicles_count_sum' => 'getReceivedVehiclesCountSum',
        'transferred_vehicle_mass_sum' => 'getTransferredVehicleMassSum',
        'transferred_vehicles_count_sum' => 'getTransferredVehiclesCountSum',
        'waste_code_extended' => 'getWasteCodeExtended',
        'waste_code_extended_description' => 'getWasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'getHazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'getHazardousWasteReclassificationDescription'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['card_number'] = isset($data['card_number']) ? $data['card_number'] : null;
        $this->container['calendar_year'] = isset($data['calendar_year']) ? $data['calendar_year'] : null;
        $this->container['waste_code_and_description'] = isset($data['waste_code_and_description']) ? $data['waste_code_and_description'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['company_adress'] = isset($data['company_adress']) ? $data['company_adress'] : null;
        $this->container['company_identification_number'] = isset($data['company_identification_number']) ? $data['company_identification_number'] : null;
        $this->container['company_nip'] = isset($data['company_nip']) ? $data['company_nip'] : null;
        $this->container['company_nip_eu'] = isset($data['company_nip_eu']) ? $data['company_nip_eu'] : null;
        $this->container['eup_name'] = isset($data['eup_name']) ? $data['eup_name'] : null;
        $this->container['eup_identification_number'] = isset($data['eup_identification_number']) ? $data['eup_identification_number'] : null;
        $this->container['eup_adress'] = isset($data['eup_adress']) ? $data['eup_adress'] : null;
        $this->container['items_list'] = isset($data['items_list']) ? $data['items_list'] : null;
        $this->container['received_vehicle_mass_sum'] = isset($data['received_vehicle_mass_sum']) ? $data['received_vehicle_mass_sum'] : null;
        $this->container['received_vehicles_count_sum'] = isset($data['received_vehicles_count_sum']) ? $data['received_vehicles_count_sum'] : null;
        $this->container['transferred_vehicle_mass_sum'] = isset($data['transferred_vehicle_mass_sum']) ? $data['transferred_vehicle_mass_sum'] : null;
        $this->container['transferred_vehicles_count_sum'] = isset($data['transferred_vehicles_count_sum']) ? $data['transferred_vehicles_count_sum'] : null;
        $this->container['waste_code_extended'] = isset($data['waste_code_extended']) ? $data['waste_code_extended'] : null;
        $this->container['waste_code_extended_description'] = isset($data['waste_code_extended_description']) ? $data['waste_code_extended_description'] : null;
        $this->container['hazardous_waste_reclassification'] = isset($data['hazardous_waste_reclassification']) ? $data['hazardous_waste_reclassification'] : null;
        $this->container['hazardous_waste_reclassification_description'] = isset($data['hazardous_waste_reclassification_description']) ? $data['hazardous_waste_reclassification_description'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets card_number
     *
     * @return string
     */
    public function getCardNumber()
    {
        return $this->container['card_number'];
    }

    /**
     * Sets card_number
     *
     * @param string $card_number Numer karty
     *
     * @return $this
     */
    public function setCardNumber($card_number)
    {
        $this->container['card_number'] = $card_number;

        return $this;
    }

    /**
     * Gets calendar_year
     *
     * @return string
     */
    public function getCalendarYear()
    {
        return $this->container['calendar_year'];
    }

    /**
     * Sets calendar_year
     *
     * @param string $calendar_year Rok kalendarzowy
     *
     * @return $this
     */
    public function setCalendarYear($calendar_year)
    {
        $this->container['calendar_year'] = $calendar_year;

        return $this;
    }

    /**
     * Gets waste_code_and_description
     *
     * @return string
     */
    public function getWasteCodeAndDescription()
    {
        return $this->container['waste_code_and_description'];
    }

    /**
     * Sets waste_code_and_description
     *
     * @param string $waste_code_and_description Kod i opis odpadu
     *
     * @return $this
     */
    public function setWasteCodeAndDescription($waste_code_and_description)
    {
        $this->container['waste_code_and_description'] = $waste_code_and_description;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string $company_name Nazwa lub imię i nazwisko
     *
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets company_adress
     *
     * @return string
     */
    public function getCompanyAdress()
    {
        return $this->container['company_adress'];
    }

    /**
     * Sets company_adress
     *
     * @param string $company_adress Adres
     *
     * @return $this
     */
    public function setCompanyAdress($company_adress)
    {
        $this->container['company_adress'] = $company_adress;

        return $this;
    }

    /**
     * Gets company_identification_number
     *
     * @return string
     */
    public function getCompanyIdentificationNumber()
    {
        return $this->container['company_identification_number'];
    }

    /**
     * Sets company_identification_number
     *
     * @param string $company_identification_number Numer rejestrowy
     *
     * @return $this
     */
    public function setCompanyIdentificationNumber($company_identification_number)
    {
        $this->container['company_identification_number'] = $company_identification_number;

        return $this;
    }

    /**
     * Gets company_nip
     *
     * @return string
     */
    public function getCompanyNip()
    {
        return $this->container['company_nip'];
    }

    /**
     * Sets company_nip
     *
     * @param string $company_nip NIP
     *
     * @return $this
     */
    public function setCompanyNip($company_nip)
    {
        $this->container['company_nip'] = $company_nip;

        return $this;
    }

    /**
     * Gets company_nip_eu
     *
     * @return string
     */
    public function getCompanyNipEu()
    {
        return $this->container['company_nip_eu'];
    }

    /**
     * Sets company_nip_eu
     *
     * @param string $company_nip_eu NIP europejski
     *
     * @return $this
     */
    public function setCompanyNipEu($company_nip_eu)
    {
        $this->container['company_nip_eu'] = $company_nip_eu;

        return $this;
    }

    /**
     * Gets eup_name
     *
     * @return string
     */
    public function getEupName()
    {
        return $this->container['eup_name'];
    }

    /**
     * Sets eup_name
     *
     * @param string $eup_name Nazwa miejsca prowadzenia działalności
     *
     * @return $this
     */
    public function setEupName($eup_name)
    {
        $this->container['eup_name'] = $eup_name;

        return $this;
    }

    /**
     * Gets eup_identification_number
     *
     * @return string
     */
    public function getEupIdentificationNumber()
    {
        return $this->container['eup_identification_number'];
    }

    /**
     * Sets eup_identification_number
     *
     * @param string $eup_identification_number Numer miejsca prowadzenia działalności
     *
     * @return $this
     */
    public function setEupIdentificationNumber($eup_identification_number)
    {
        $this->container['eup_identification_number'] = $eup_identification_number;

        return $this;
    }

    /**
     * Gets eup_adress
     *
     * @return string
     */
    public function getEupAdress()
    {
        return $this->container['eup_adress'];
    }

    /**
     * Sets eup_adress
     *
     * @param string $eup_adress Adres miejsca prowadzenia działalności
     *
     * @return $this
     */
    public function setEupAdress($eup_adress)
    {
        $this->container['eup_adress'] = $eup_adress;

        return $this;
    }

    /**
     * Gets items_list
     *
     * @return \Swagger\Client\Model\WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1KepwCollectingPrintingPageList[]
     */
    public function getItemsList()
    {
        return $this->container['items_list'];
    }

    /**
     * Sets items_list
     *
     * @param \Swagger\Client\Model\WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1KepwCollectingPrintingPageList[] $items_list Lista wpisów
     *
     * @return $this
     */
    public function setItemsList($items_list)
    {
        $this->container['items_list'] = $items_list;

        return $this;
    }

    /**
     * Gets received_vehicle_mass_sum
     *
     * @return double
     */
    public function getReceivedVehicleMassSum()
    {
        return $this->container['received_vehicle_mass_sum'];
    }

    /**
     * Sets received_vehicle_mass_sum
     *
     * @param double $received_vehicle_mass_sum 
     *
     * @return $this
     */
    public function setReceivedVehicleMassSum($received_vehicle_mass_sum)
    {
        $this->container['received_vehicle_mass_sum'] = $received_vehicle_mass_sum;

        return $this;
    }

    /**
     * Gets received_vehicles_count_sum
     *
     * @return int
     */
    public function getReceivedVehiclesCountSum()
    {
        return $this->container['received_vehicles_count_sum'];
    }

    /**
     * Sets received_vehicles_count_sum
     *
     * @param int $received_vehicles_count_sum 
     *
     * @return $this
     */
    public function setReceivedVehiclesCountSum($received_vehicles_count_sum)
    {
        $this->container['received_vehicles_count_sum'] = $received_vehicles_count_sum;

        return $this;
    }

    /**
     * Gets transferred_vehicle_mass_sum
     *
     * @return double
     */
    public function getTransferredVehicleMassSum()
    {
        return $this->container['transferred_vehicle_mass_sum'];
    }

    /**
     * Sets transferred_vehicle_mass_sum
     *
     * @param double $transferred_vehicle_mass_sum 
     *
     * @return $this
     */
    public function setTransferredVehicleMassSum($transferred_vehicle_mass_sum)
    {
        $this->container['transferred_vehicle_mass_sum'] = $transferred_vehicle_mass_sum;

        return $this;
    }

    /**
     * Gets transferred_vehicles_count_sum
     *
     * @return int
     */
    public function getTransferredVehiclesCountSum()
    {
        return $this->container['transferred_vehicles_count_sum'];
    }

    /**
     * Sets transferred_vehicles_count_sum
     *
     * @param int $transferred_vehicles_count_sum 
     *
     * @return $this
     */
    public function setTransferredVehiclesCountSum($transferred_vehicles_count_sum)
    {
        $this->container['transferred_vehicles_count_sum'] = $transferred_vehicles_count_sum;

        return $this;
    }

    /**
     * Gets waste_code_extended
     *
     * @return bool
     */
    public function getWasteCodeExtended()
    {
        return $this->container['waste_code_extended'];
    }

    /**
     * Sets waste_code_extended
     *
     * @param bool $waste_code_extended Kod ex
     *
     * @return $this
     */
    public function setWasteCodeExtended($waste_code_extended)
    {
        $this->container['waste_code_extended'] = $waste_code_extended;

        return $this;
    }

    /**
     * Gets waste_code_extended_description
     *
     * @return string
     */
    public function getWasteCodeExtendedDescription()
    {
        return $this->container['waste_code_extended_description'];
    }

    /**
     * Sets waste_code_extended_description
     *
     * @param string $waste_code_extended_description Rodzaj odpadu ex
     *
     * @return $this
     */
    public function setWasteCodeExtendedDescription($waste_code_extended_description)
    {
        $this->container['waste_code_extended_description'] = $waste_code_extended_description;

        return $this;
    }

    /**
     * Gets hazardous_waste_reclassification
     *
     * @return bool
     */
    public function getHazardousWasteReclassification()
    {
        return $this->container['hazardous_waste_reclassification'];
    }

    /**
     * Sets hazardous_waste_reclassification
     *
     * @param bool $hazardous_waste_reclassification Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
     *
     * @return $this
     */
    public function setHazardousWasteReclassification($hazardous_waste_reclassification)
    {
        $this->container['hazardous_waste_reclassification'] = $hazardous_waste_reclassification;

        return $this;
    }

    /**
     * Gets hazardous_waste_reclassification_description
     *
     * @return string
     */
    public function getHazardousWasteReclassificationDescription()
    {
        return $this->container['hazardous_waste_reclassification_description'];
    }

    /**
     * Sets hazardous_waste_reclassification_description
     *
     * @param string $hazardous_waste_reclassification_description Rodzaj odpadu
     *
     * @return $this
     */
    public function setHazardousWasteReclassificationDescription($hazardous_waste_reclassification_description)
    {
        $this->container['hazardous_waste_reclassification_description'] = $hazardous_waste_reclassification_description;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


