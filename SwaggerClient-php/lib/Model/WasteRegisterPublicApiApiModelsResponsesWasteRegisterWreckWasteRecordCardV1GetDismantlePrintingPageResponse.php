<?php
/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1GetDismantlePrintingPageResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'WasteRegisterPublic.Api.ApiModels.Responses.WasteRegister.WreckWasteRecordCard.V1.GetDismantlePrintingPageResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'card_number' => 'string',
        'calendar_year' => 'string',
        'waste_code_with_description' => 'string',
        'company_name' => 'string',
        'company_adress' => 'string',
        'company_identification_number' => 'string',
        'company_nip' => 'string',
        'company_nip_eu' => 'string',
        'eup_name' => 'string',
        'eup_identification_number' => 'string',
        'eup_adress' => 'string',
        'received_from_dismantle_station_vehicles_mass_sum' => 'double',
        'received_from_dismantle_station_vehicles_total_count' => 'int',
        'received_vehicles_mass_sum' => 'double',
        'received_vehicles_total_count' => 'int',
        'produced_waste_mass_sum' => 'double',
        'produced_reusable_parts_mass_sum' => 'double',
        'processed_recycled_waste_mass_sum' => 'double',
        'processed_energy_recovery_waste_mass_sum' => 'double',
        'processed_other_than_recycling_waste_mass_sum' => 'double',
        'transferred_abroad_waste_mass_sum' => 'double',
        'transferred_disposed_waste_mass_sum' => 'double',
        'transferred_energy_recovery_waste_mass_sum' => 'double',
        'transferred_other_than_recycled_waste_mass_sum' => 'double',
        'transferred_recycled_waste_mass_sum' => 'double',
        'transferred_shredded_waste_mass_sum' => 'double',
        'waste_code_extended' => 'bool',
        'waste_code_extended_description' => 'string',
        'hazardous_waste_reclassification' => 'bool',
        'hazardous_waste_reclassification_description' => 'string',
        'list_items' => '\Swagger\Client\Model\WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantlePrintingPageListItem[]',
        'reusable_equipment_and_parts_mass_sum' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'card_number' => null,
        'calendar_year' => null,
        'waste_code_with_description' => null,
        'company_name' => null,
        'company_adress' => null,
        'company_identification_number' => null,
        'company_nip' => null,
        'company_nip_eu' => null,
        'eup_name' => null,
        'eup_identification_number' => null,
        'eup_adress' => null,
        'received_from_dismantle_station_vehicles_mass_sum' => 'double',
        'received_from_dismantle_station_vehicles_total_count' => 'int32',
        'received_vehicles_mass_sum' => 'double',
        'received_vehicles_total_count' => 'int32',
        'produced_waste_mass_sum' => 'double',
        'produced_reusable_parts_mass_sum' => 'double',
        'processed_recycled_waste_mass_sum' => 'double',
        'processed_energy_recovery_waste_mass_sum' => 'double',
        'processed_other_than_recycling_waste_mass_sum' => 'double',
        'transferred_abroad_waste_mass_sum' => 'double',
        'transferred_disposed_waste_mass_sum' => 'double',
        'transferred_energy_recovery_waste_mass_sum' => 'double',
        'transferred_other_than_recycled_waste_mass_sum' => 'double',
        'transferred_recycled_waste_mass_sum' => 'double',
        'transferred_shredded_waste_mass_sum' => 'double',
        'waste_code_extended' => null,
        'waste_code_extended_description' => null,
        'hazardous_waste_reclassification' => null,
        'hazardous_waste_reclassification_description' => null,
        'list_items' => null,
        'reusable_equipment_and_parts_mass_sum' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'card_number' => 'cardNumber',
        'calendar_year' => 'calendarYear',
        'waste_code_with_description' => 'wasteCodeWithDescription',
        'company_name' => 'companyName',
        'company_adress' => 'companyAdress',
        'company_identification_number' => 'companyIdentificationNumber',
        'company_nip' => 'companyNip',
        'company_nip_eu' => 'companyNipEu',
        'eup_name' => 'eupName',
        'eup_identification_number' => 'eupIdentificationNumber',
        'eup_adress' => 'eupAdress',
        'received_from_dismantle_station_vehicles_mass_sum' => 'receivedFromDismantleStationVehiclesMassSum',
        'received_from_dismantle_station_vehicles_total_count' => 'receivedFromDismantleStationVehiclesTotalCount',
        'received_vehicles_mass_sum' => 'receivedVehiclesMassSum',
        'received_vehicles_total_count' => 'receivedVehiclesTotalCount',
        'produced_waste_mass_sum' => 'producedWasteMassSum',
        'produced_reusable_parts_mass_sum' => 'producedReusablePartsMassSum',
        'processed_recycled_waste_mass_sum' => 'processedRecycledWasteMassSum',
        'processed_energy_recovery_waste_mass_sum' => 'processedEnergyRecoveryWasteMassSum',
        'processed_other_than_recycling_waste_mass_sum' => 'processedOtherThanRecyclingWasteMassSum',
        'transferred_abroad_waste_mass_sum' => 'transferredAbroadWasteMassSum',
        'transferred_disposed_waste_mass_sum' => 'transferredDisposedWasteMassSum',
        'transferred_energy_recovery_waste_mass_sum' => 'transferredEnergyRecoveryWasteMassSum',
        'transferred_other_than_recycled_waste_mass_sum' => 'transferredOtherThanRecycledWasteMassSum',
        'transferred_recycled_waste_mass_sum' => 'transferredRecycledWasteMassSum',
        'transferred_shredded_waste_mass_sum' => 'transferredShreddedWasteMassSum',
        'waste_code_extended' => 'wasteCodeExtended',
        'waste_code_extended_description' => 'wasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'hazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'hazardousWasteReclassificationDescription',
        'list_items' => 'listItems',
        'reusable_equipment_and_parts_mass_sum' => 'reusableEquipmentAndPartsMassSum'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'card_number' => 'setCardNumber',
        'calendar_year' => 'setCalendarYear',
        'waste_code_with_description' => 'setWasteCodeWithDescription',
        'company_name' => 'setCompanyName',
        'company_adress' => 'setCompanyAdress',
        'company_identification_number' => 'setCompanyIdentificationNumber',
        'company_nip' => 'setCompanyNip',
        'company_nip_eu' => 'setCompanyNipEu',
        'eup_name' => 'setEupName',
        'eup_identification_number' => 'setEupIdentificationNumber',
        'eup_adress' => 'setEupAdress',
        'received_from_dismantle_station_vehicles_mass_sum' => 'setReceivedFromDismantleStationVehiclesMassSum',
        'received_from_dismantle_station_vehicles_total_count' => 'setReceivedFromDismantleStationVehiclesTotalCount',
        'received_vehicles_mass_sum' => 'setReceivedVehiclesMassSum',
        'received_vehicles_total_count' => 'setReceivedVehiclesTotalCount',
        'produced_waste_mass_sum' => 'setProducedWasteMassSum',
        'produced_reusable_parts_mass_sum' => 'setProducedReusablePartsMassSum',
        'processed_recycled_waste_mass_sum' => 'setProcessedRecycledWasteMassSum',
        'processed_energy_recovery_waste_mass_sum' => 'setProcessedEnergyRecoveryWasteMassSum',
        'processed_other_than_recycling_waste_mass_sum' => 'setProcessedOtherThanRecyclingWasteMassSum',
        'transferred_abroad_waste_mass_sum' => 'setTransferredAbroadWasteMassSum',
        'transferred_disposed_waste_mass_sum' => 'setTransferredDisposedWasteMassSum',
        'transferred_energy_recovery_waste_mass_sum' => 'setTransferredEnergyRecoveryWasteMassSum',
        'transferred_other_than_recycled_waste_mass_sum' => 'setTransferredOtherThanRecycledWasteMassSum',
        'transferred_recycled_waste_mass_sum' => 'setTransferredRecycledWasteMassSum',
        'transferred_shredded_waste_mass_sum' => 'setTransferredShreddedWasteMassSum',
        'waste_code_extended' => 'setWasteCodeExtended',
        'waste_code_extended_description' => 'setWasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'setHazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'setHazardousWasteReclassificationDescription',
        'list_items' => 'setListItems',
        'reusable_equipment_and_parts_mass_sum' => 'setReusableEquipmentAndPartsMassSum'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'card_number' => 'getCardNumber',
        'calendar_year' => 'getCalendarYear',
        'waste_code_with_description' => 'getWasteCodeWithDescription',
        'company_name' => 'getCompanyName',
        'company_adress' => 'getCompanyAdress',
        'company_identification_number' => 'getCompanyIdentificationNumber',
        'company_nip' => 'getCompanyNip',
        'company_nip_eu' => 'getCompanyNipEu',
        'eup_name' => 'getEupName',
        'eup_identification_number' => 'getEupIdentificationNumber',
        'eup_adress' => 'getEupAdress',
        'received_from_dismantle_station_vehicles_mass_sum' => 'getReceivedFromDismantleStationVehiclesMassSum',
        'received_from_dismantle_station_vehicles_total_count' => 'getReceivedFromDismantleStationVehiclesTotalCount',
        'received_vehicles_mass_sum' => 'getReceivedVehiclesMassSum',
        'received_vehicles_total_count' => 'getReceivedVehiclesTotalCount',
        'produced_waste_mass_sum' => 'getProducedWasteMassSum',
        'produced_reusable_parts_mass_sum' => 'getProducedReusablePartsMassSum',
        'processed_recycled_waste_mass_sum' => 'getProcessedRecycledWasteMassSum',
        'processed_energy_recovery_waste_mass_sum' => 'getProcessedEnergyRecoveryWasteMassSum',
        'processed_other_than_recycling_waste_mass_sum' => 'getProcessedOtherThanRecyclingWasteMassSum',
        'transferred_abroad_waste_mass_sum' => 'getTransferredAbroadWasteMassSum',
        'transferred_disposed_waste_mass_sum' => 'getTransferredDisposedWasteMassSum',
        'transferred_energy_recovery_waste_mass_sum' => 'getTransferredEnergyRecoveryWasteMassSum',
        'transferred_other_than_recycled_waste_mass_sum' => 'getTransferredOtherThanRecycledWasteMassSum',
        'transferred_recycled_waste_mass_sum' => 'getTransferredRecycledWasteMassSum',
        'transferred_shredded_waste_mass_sum' => 'getTransferredShreddedWasteMassSum',
        'waste_code_extended' => 'getWasteCodeExtended',
        'waste_code_extended_description' => 'getWasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'getHazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'getHazardousWasteReclassificationDescription',
        'list_items' => 'getListItems',
        'reusable_equipment_and_parts_mass_sum' => 'getReusableEquipmentAndPartsMassSum'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['card_number'] = isset($data['card_number']) ? $data['card_number'] : null;
        $this->container['calendar_year'] = isset($data['calendar_year']) ? $data['calendar_year'] : null;
        $this->container['waste_code_with_description'] = isset($data['waste_code_with_description']) ? $data['waste_code_with_description'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['company_adress'] = isset($data['company_adress']) ? $data['company_adress'] : null;
        $this->container['company_identification_number'] = isset($data['company_identification_number']) ? $data['company_identification_number'] : null;
        $this->container['company_nip'] = isset($data['company_nip']) ? $data['company_nip'] : null;
        $this->container['company_nip_eu'] = isset($data['company_nip_eu']) ? $data['company_nip_eu'] : null;
        $this->container['eup_name'] = isset($data['eup_name']) ? $data['eup_name'] : null;
        $this->container['eup_identification_number'] = isset($data['eup_identification_number']) ? $data['eup_identification_number'] : null;
        $this->container['eup_adress'] = isset($data['eup_adress']) ? $data['eup_adress'] : null;
        $this->container['received_from_dismantle_station_vehicles_mass_sum'] = isset($data['received_from_dismantle_station_vehicles_mass_sum']) ? $data['received_from_dismantle_station_vehicles_mass_sum'] : null;
        $this->container['received_from_dismantle_station_vehicles_total_count'] = isset($data['received_from_dismantle_station_vehicles_total_count']) ? $data['received_from_dismantle_station_vehicles_total_count'] : null;
        $this->container['received_vehicles_mass_sum'] = isset($data['received_vehicles_mass_sum']) ? $data['received_vehicles_mass_sum'] : null;
        $this->container['received_vehicles_total_count'] = isset($data['received_vehicles_total_count']) ? $data['received_vehicles_total_count'] : null;
        $this->container['produced_waste_mass_sum'] = isset($data['produced_waste_mass_sum']) ? $data['produced_waste_mass_sum'] : null;
        $this->container['produced_reusable_parts_mass_sum'] = isset($data['produced_reusable_parts_mass_sum']) ? $data['produced_reusable_parts_mass_sum'] : null;
        $this->container['processed_recycled_waste_mass_sum'] = isset($data['processed_recycled_waste_mass_sum']) ? $data['processed_recycled_waste_mass_sum'] : null;
        $this->container['processed_energy_recovery_waste_mass_sum'] = isset($data['processed_energy_recovery_waste_mass_sum']) ? $data['processed_energy_recovery_waste_mass_sum'] : null;
        $this->container['processed_other_than_recycling_waste_mass_sum'] = isset($data['processed_other_than_recycling_waste_mass_sum']) ? $data['processed_other_than_recycling_waste_mass_sum'] : null;
        $this->container['transferred_abroad_waste_mass_sum'] = isset($data['transferred_abroad_waste_mass_sum']) ? $data['transferred_abroad_waste_mass_sum'] : null;
        $this->container['transferred_disposed_waste_mass_sum'] = isset($data['transferred_disposed_waste_mass_sum']) ? $data['transferred_disposed_waste_mass_sum'] : null;
        $this->container['transferred_energy_recovery_waste_mass_sum'] = isset($data['transferred_energy_recovery_waste_mass_sum']) ? $data['transferred_energy_recovery_waste_mass_sum'] : null;
        $this->container['transferred_other_than_recycled_waste_mass_sum'] = isset($data['transferred_other_than_recycled_waste_mass_sum']) ? $data['transferred_other_than_recycled_waste_mass_sum'] : null;
        $this->container['transferred_recycled_waste_mass_sum'] = isset($data['transferred_recycled_waste_mass_sum']) ? $data['transferred_recycled_waste_mass_sum'] : null;
        $this->container['transferred_shredded_waste_mass_sum'] = isset($data['transferred_shredded_waste_mass_sum']) ? $data['transferred_shredded_waste_mass_sum'] : null;
        $this->container['waste_code_extended'] = isset($data['waste_code_extended']) ? $data['waste_code_extended'] : null;
        $this->container['waste_code_extended_description'] = isset($data['waste_code_extended_description']) ? $data['waste_code_extended_description'] : null;
        $this->container['hazardous_waste_reclassification'] = isset($data['hazardous_waste_reclassification']) ? $data['hazardous_waste_reclassification'] : null;
        $this->container['hazardous_waste_reclassification_description'] = isset($data['hazardous_waste_reclassification_description']) ? $data['hazardous_waste_reclassification_description'] : null;
        $this->container['list_items'] = isset($data['list_items']) ? $data['list_items'] : null;
        $this->container['reusable_equipment_and_parts_mass_sum'] = isset($data['reusable_equipment_and_parts_mass_sum']) ? $data['reusable_equipment_and_parts_mass_sum'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets card_number
     *
     * @return string
     */
    public function getCardNumber()
    {
        return $this->container['card_number'];
    }

    /**
     * Sets card_number
     *
     * @param string $card_number Numer karty
     *
     * @return $this
     */
    public function setCardNumber($card_number)
    {
        $this->container['card_number'] = $card_number;

        return $this;
    }

    /**
     * Gets calendar_year
     *
     * @return string
     */
    public function getCalendarYear()
    {
        return $this->container['calendar_year'];
    }

    /**
     * Sets calendar_year
     *
     * @param string $calendar_year Rok kalendarzowy
     *
     * @return $this
     */
    public function setCalendarYear($calendar_year)
    {
        $this->container['calendar_year'] = $calendar_year;

        return $this;
    }

    /**
     * Gets waste_code_with_description
     *
     * @return string
     */
    public function getWasteCodeWithDescription()
    {
        return $this->container['waste_code_with_description'];
    }

    /**
     * Sets waste_code_with_description
     *
     * @param string $waste_code_with_description 
     *
     * @return $this
     */
    public function setWasteCodeWithDescription($waste_code_with_description)
    {
        $this->container['waste_code_with_description'] = $waste_code_with_description;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string $company_name Nazwa lub imię i nazwisko
     *
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets company_adress
     *
     * @return string
     */
    public function getCompanyAdress()
    {
        return $this->container['company_adress'];
    }

    /**
     * Sets company_adress
     *
     * @param string $company_adress Adres
     *
     * @return $this
     */
    public function setCompanyAdress($company_adress)
    {
        $this->container['company_adress'] = $company_adress;

        return $this;
    }

    /**
     * Gets company_identification_number
     *
     * @return string
     */
    public function getCompanyIdentificationNumber()
    {
        return $this->container['company_identification_number'];
    }

    /**
     * Sets company_identification_number
     *
     * @param string $company_identification_number Numer rejestrowy
     *
     * @return $this
     */
    public function setCompanyIdentificationNumber($company_identification_number)
    {
        $this->container['company_identification_number'] = $company_identification_number;

        return $this;
    }

    /**
     * Gets company_nip
     *
     * @return string
     */
    public function getCompanyNip()
    {
        return $this->container['company_nip'];
    }

    /**
     * Sets company_nip
     *
     * @param string $company_nip NIP
     *
     * @return $this
     */
    public function setCompanyNip($company_nip)
    {
        $this->container['company_nip'] = $company_nip;

        return $this;
    }

    /**
     * Gets company_nip_eu
     *
     * @return string
     */
    public function getCompanyNipEu()
    {
        return $this->container['company_nip_eu'];
    }

    /**
     * Sets company_nip_eu
     *
     * @param string $company_nip_eu NIP europejski
     *
     * @return $this
     */
    public function setCompanyNipEu($company_nip_eu)
    {
        $this->container['company_nip_eu'] = $company_nip_eu;

        return $this;
    }

    /**
     * Gets eup_name
     *
     * @return string
     */
    public function getEupName()
    {
        return $this->container['eup_name'];
    }

    /**
     * Sets eup_name
     *
     * @param string $eup_name Nazwa miejsca prowadzenia działalności
     *
     * @return $this
     */
    public function setEupName($eup_name)
    {
        $this->container['eup_name'] = $eup_name;

        return $this;
    }

    /**
     * Gets eup_identification_number
     *
     * @return string
     */
    public function getEupIdentificationNumber()
    {
        return $this->container['eup_identification_number'];
    }

    /**
     * Sets eup_identification_number
     *
     * @param string $eup_identification_number Numer miejsca prowadzenia działalności
     *
     * @return $this
     */
    public function setEupIdentificationNumber($eup_identification_number)
    {
        $this->container['eup_identification_number'] = $eup_identification_number;

        return $this;
    }

    /**
     * Gets eup_adress
     *
     * @return string
     */
    public function getEupAdress()
    {
        return $this->container['eup_adress'];
    }

    /**
     * Sets eup_adress
     *
     * @param string $eup_adress Adres miejsca prowadzenia działalności
     *
     * @return $this
     */
    public function setEupAdress($eup_adress)
    {
        $this->container['eup_adress'] = $eup_adress;

        return $this;
    }

    /**
     * Gets received_from_dismantle_station_vehicles_mass_sum
     *
     * @return double
     */
    public function getReceivedFromDismantleStationVehiclesMassSum()
    {
        return $this->container['received_from_dismantle_station_vehicles_mass_sum'];
    }

    /**
     * Sets received_from_dismantle_station_vehicles_mass_sum
     *
     * @param double $received_from_dismantle_station_vehicles_mass_sum 
     *
     * @return $this
     */
    public function setReceivedFromDismantleStationVehiclesMassSum($received_from_dismantle_station_vehicles_mass_sum)
    {
        $this->container['received_from_dismantle_station_vehicles_mass_sum'] = $received_from_dismantle_station_vehicles_mass_sum;

        return $this;
    }

    /**
     * Gets received_from_dismantle_station_vehicles_total_count
     *
     * @return int
     */
    public function getReceivedFromDismantleStationVehiclesTotalCount()
    {
        return $this->container['received_from_dismantle_station_vehicles_total_count'];
    }

    /**
     * Sets received_from_dismantle_station_vehicles_total_count
     *
     * @param int $received_from_dismantle_station_vehicles_total_count 
     *
     * @return $this
     */
    public function setReceivedFromDismantleStationVehiclesTotalCount($received_from_dismantle_station_vehicles_total_count)
    {
        $this->container['received_from_dismantle_station_vehicles_total_count'] = $received_from_dismantle_station_vehicles_total_count;

        return $this;
    }

    /**
     * Gets received_vehicles_mass_sum
     *
     * @return double
     */
    public function getReceivedVehiclesMassSum()
    {
        return $this->container['received_vehicles_mass_sum'];
    }

    /**
     * Sets received_vehicles_mass_sum
     *
     * @param double $received_vehicles_mass_sum 
     *
     * @return $this
     */
    public function setReceivedVehiclesMassSum($received_vehicles_mass_sum)
    {
        $this->container['received_vehicles_mass_sum'] = $received_vehicles_mass_sum;

        return $this;
    }

    /**
     * Gets received_vehicles_total_count
     *
     * @return int
     */
    public function getReceivedVehiclesTotalCount()
    {
        return $this->container['received_vehicles_total_count'];
    }

    /**
     * Sets received_vehicles_total_count
     *
     * @param int $received_vehicles_total_count 
     *
     * @return $this
     */
    public function setReceivedVehiclesTotalCount($received_vehicles_total_count)
    {
        $this->container['received_vehicles_total_count'] = $received_vehicles_total_count;

        return $this;
    }

    /**
     * Gets produced_waste_mass_sum
     *
     * @return double
     */
    public function getProducedWasteMassSum()
    {
        return $this->container['produced_waste_mass_sum'];
    }

    /**
     * Sets produced_waste_mass_sum
     *
     * @param double $produced_waste_mass_sum 
     *
     * @return $this
     */
    public function setProducedWasteMassSum($produced_waste_mass_sum)
    {
        $this->container['produced_waste_mass_sum'] = $produced_waste_mass_sum;

        return $this;
    }

    /**
     * Gets produced_reusable_parts_mass_sum
     *
     * @return double
     */
    public function getProducedReusablePartsMassSum()
    {
        return $this->container['produced_reusable_parts_mass_sum'];
    }

    /**
     * Sets produced_reusable_parts_mass_sum
     *
     * @param double $produced_reusable_parts_mass_sum 
     *
     * @return $this
     */
    public function setProducedReusablePartsMassSum($produced_reusable_parts_mass_sum)
    {
        $this->container['produced_reusable_parts_mass_sum'] = $produced_reusable_parts_mass_sum;

        return $this;
    }

    /**
     * Gets processed_recycled_waste_mass_sum
     *
     * @return double
     */
    public function getProcessedRecycledWasteMassSum()
    {
        return $this->container['processed_recycled_waste_mass_sum'];
    }

    /**
     * Sets processed_recycled_waste_mass_sum
     *
     * @param double $processed_recycled_waste_mass_sum 
     *
     * @return $this
     */
    public function setProcessedRecycledWasteMassSum($processed_recycled_waste_mass_sum)
    {
        $this->container['processed_recycled_waste_mass_sum'] = $processed_recycled_waste_mass_sum;

        return $this;
    }

    /**
     * Gets processed_energy_recovery_waste_mass_sum
     *
     * @return double
     */
    public function getProcessedEnergyRecoveryWasteMassSum()
    {
        return $this->container['processed_energy_recovery_waste_mass_sum'];
    }

    /**
     * Sets processed_energy_recovery_waste_mass_sum
     *
     * @param double $processed_energy_recovery_waste_mass_sum 
     *
     * @return $this
     */
    public function setProcessedEnergyRecoveryWasteMassSum($processed_energy_recovery_waste_mass_sum)
    {
        $this->container['processed_energy_recovery_waste_mass_sum'] = $processed_energy_recovery_waste_mass_sum;

        return $this;
    }

    /**
     * Gets processed_other_than_recycling_waste_mass_sum
     *
     * @return double
     */
    public function getProcessedOtherThanRecyclingWasteMassSum()
    {
        return $this->container['processed_other_than_recycling_waste_mass_sum'];
    }

    /**
     * Sets processed_other_than_recycling_waste_mass_sum
     *
     * @param double $processed_other_than_recycling_waste_mass_sum 
     *
     * @return $this
     */
    public function setProcessedOtherThanRecyclingWasteMassSum($processed_other_than_recycling_waste_mass_sum)
    {
        $this->container['processed_other_than_recycling_waste_mass_sum'] = $processed_other_than_recycling_waste_mass_sum;

        return $this;
    }

    /**
     * Gets transferred_abroad_waste_mass_sum
     *
     * @return double
     */
    public function getTransferredAbroadWasteMassSum()
    {
        return $this->container['transferred_abroad_waste_mass_sum'];
    }

    /**
     * Sets transferred_abroad_waste_mass_sum
     *
     * @param double $transferred_abroad_waste_mass_sum 
     *
     * @return $this
     */
    public function setTransferredAbroadWasteMassSum($transferred_abroad_waste_mass_sum)
    {
        $this->container['transferred_abroad_waste_mass_sum'] = $transferred_abroad_waste_mass_sum;

        return $this;
    }

    /**
     * Gets transferred_disposed_waste_mass_sum
     *
     * @return double
     */
    public function getTransferredDisposedWasteMassSum()
    {
        return $this->container['transferred_disposed_waste_mass_sum'];
    }

    /**
     * Sets transferred_disposed_waste_mass_sum
     *
     * @param double $transferred_disposed_waste_mass_sum 
     *
     * @return $this
     */
    public function setTransferredDisposedWasteMassSum($transferred_disposed_waste_mass_sum)
    {
        $this->container['transferred_disposed_waste_mass_sum'] = $transferred_disposed_waste_mass_sum;

        return $this;
    }

    /**
     * Gets transferred_energy_recovery_waste_mass_sum
     *
     * @return double
     */
    public function getTransferredEnergyRecoveryWasteMassSum()
    {
        return $this->container['transferred_energy_recovery_waste_mass_sum'];
    }

    /**
     * Sets transferred_energy_recovery_waste_mass_sum
     *
     * @param double $transferred_energy_recovery_waste_mass_sum 
     *
     * @return $this
     */
    public function setTransferredEnergyRecoveryWasteMassSum($transferred_energy_recovery_waste_mass_sum)
    {
        $this->container['transferred_energy_recovery_waste_mass_sum'] = $transferred_energy_recovery_waste_mass_sum;

        return $this;
    }

    /**
     * Gets transferred_other_than_recycled_waste_mass_sum
     *
     * @return double
     */
    public function getTransferredOtherThanRecycledWasteMassSum()
    {
        return $this->container['transferred_other_than_recycled_waste_mass_sum'];
    }

    /**
     * Sets transferred_other_than_recycled_waste_mass_sum
     *
     * @param double $transferred_other_than_recycled_waste_mass_sum 
     *
     * @return $this
     */
    public function setTransferredOtherThanRecycledWasteMassSum($transferred_other_than_recycled_waste_mass_sum)
    {
        $this->container['transferred_other_than_recycled_waste_mass_sum'] = $transferred_other_than_recycled_waste_mass_sum;

        return $this;
    }

    /**
     * Gets transferred_recycled_waste_mass_sum
     *
     * @return double
     */
    public function getTransferredRecycledWasteMassSum()
    {
        return $this->container['transferred_recycled_waste_mass_sum'];
    }

    /**
     * Sets transferred_recycled_waste_mass_sum
     *
     * @param double $transferred_recycled_waste_mass_sum 
     *
     * @return $this
     */
    public function setTransferredRecycledWasteMassSum($transferred_recycled_waste_mass_sum)
    {
        $this->container['transferred_recycled_waste_mass_sum'] = $transferred_recycled_waste_mass_sum;

        return $this;
    }

    /**
     * Gets transferred_shredded_waste_mass_sum
     *
     * @return double
     */
    public function getTransferredShreddedWasteMassSum()
    {
        return $this->container['transferred_shredded_waste_mass_sum'];
    }

    /**
     * Sets transferred_shredded_waste_mass_sum
     *
     * @param double $transferred_shredded_waste_mass_sum 
     *
     * @return $this
     */
    public function setTransferredShreddedWasteMassSum($transferred_shredded_waste_mass_sum)
    {
        $this->container['transferred_shredded_waste_mass_sum'] = $transferred_shredded_waste_mass_sum;

        return $this;
    }

    /**
     * Gets waste_code_extended
     *
     * @return bool
     */
    public function getWasteCodeExtended()
    {
        return $this->container['waste_code_extended'];
    }

    /**
     * Sets waste_code_extended
     *
     * @param bool $waste_code_extended Kod ex
     *
     * @return $this
     */
    public function setWasteCodeExtended($waste_code_extended)
    {
        $this->container['waste_code_extended'] = $waste_code_extended;

        return $this;
    }

    /**
     * Gets waste_code_extended_description
     *
     * @return string
     */
    public function getWasteCodeExtendedDescription()
    {
        return $this->container['waste_code_extended_description'];
    }

    /**
     * Sets waste_code_extended_description
     *
     * @param string $waste_code_extended_description Rodzaj odpadu ex
     *
     * @return $this
     */
    public function setWasteCodeExtendedDescription($waste_code_extended_description)
    {
        $this->container['waste_code_extended_description'] = $waste_code_extended_description;

        return $this;
    }

    /**
     * Gets hazardous_waste_reclassification
     *
     * @return bool
     */
    public function getHazardousWasteReclassification()
    {
        return $this->container['hazardous_waste_reclassification'];
    }

    /**
     * Sets hazardous_waste_reclassification
     *
     * @param bool $hazardous_waste_reclassification Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
     *
     * @return $this
     */
    public function setHazardousWasteReclassification($hazardous_waste_reclassification)
    {
        $this->container['hazardous_waste_reclassification'] = $hazardous_waste_reclassification;

        return $this;
    }

    /**
     * Gets hazardous_waste_reclassification_description
     *
     * @return string
     */
    public function getHazardousWasteReclassificationDescription()
    {
        return $this->container['hazardous_waste_reclassification_description'];
    }

    /**
     * Sets hazardous_waste_reclassification_description
     *
     * @param string $hazardous_waste_reclassification_description Rodzaj odpadu
     *
     * @return $this
     */
    public function setHazardousWasteReclassificationDescription($hazardous_waste_reclassification_description)
    {
        $this->container['hazardous_waste_reclassification_description'] = $hazardous_waste_reclassification_description;

        return $this;
    }

    /**
     * Gets list_items
     *
     * @return \Swagger\Client\Model\WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantlePrintingPageListItem[]
     */
    public function getListItems()
    {
        return $this->container['list_items'];
    }

    /**
     * Sets list_items
     *
     * @param \Swagger\Client\Model\WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1DismantlePrintingPageListItem[] $list_items 
     *
     * @return $this
     */
    public function setListItems($list_items)
    {
        $this->container['list_items'] = $list_items;

        return $this;
    }

    /**
     * Gets reusable_equipment_and_parts_mass_sum
     *
     * @return double
     */
    public function getReusableEquipmentAndPartsMassSum()
    {
        return $this->container['reusable_equipment_and_parts_mass_sum'];
    }

    /**
     * Sets reusable_equipment_and_parts_mass_sum
     *
     * @param double $reusable_equipment_and_parts_mass_sum reusable_equipment_and_parts_mass_sum
     *
     * @return $this
     */
    public function setReusableEquipmentAndPartsMassSum($reusable_equipment_and_parts_mass_sum)
    {
        $this->container['reusable_equipment_and_parts_mass_sum'] = $reusable_equipment_and_parts_mass_sum;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


