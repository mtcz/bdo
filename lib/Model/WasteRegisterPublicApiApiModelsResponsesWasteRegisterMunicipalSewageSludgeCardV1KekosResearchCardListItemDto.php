<?php
/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1KekosResearchCardListItemDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1KekosResearchCardListItemDto Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WasteRegisterPublicApiApiModelsResponsesWasteRegisterMunicipalSewageSludgeCardV1KekosResearchCardListItemDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'WasteRegisterPublic.Api.ApiModels.Responses.WasteRegister.MunicipalSewageSludgeCard.V1.KekosResearchCardListItemDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'kekos_research_card_id' => 'string',
        'batch_of_generated_sediment_id' => 'string',
        'research_number' => 'string',
        'research_date' => '\DateTime',
        'ph_reaction' => 'double',
        'dry_matter_content' => 'double',
        'content_of_organic_substances' => 'double',
        'content_of_ammonium_nitrogen' => 'double',
        'content_of_total_nitrogen' => 'double',
        'content_of_total_phosphorus' => 'double',
        'calcium_content' => 'double',
        'magnesium_content' => 'double',
        'number_of_parasitic_eggs' => 'double',
        'salmonella_bacteria' => 'bool',
        'cadmium_content' => 'double',
        'copper_content' => 'double',
        'lead_content' => 'double',
        'mercury_content' => 'double',
        'nickel_content' => 'double',
        'chrome_content' => 'double',
        'zinc_content' => 'double',
        'is_sewage_sludge_form_liquid' => 'bool',
        'is_sewage_sludge_form_mazist' => 'bool',
        'is_sewage_sludge_form_earthy' => 'bool',
        'can_be_edited' => 'bool',
        'dry_matter_percentage_content_math_sign_enum' => 'string',
        'dry_matter_percentage_content' => 'double',
        'organic_substances_percentage_content_math_sign_enum' => 'string',
        'organic_substances_percentage_content' => 'double',
        'ammonium_nitrogen_percentage_content_math_sign_enum' => 'string',
        'ammonium_nitrogen_percentage_content' => 'double',
        'total_nitrogen_percentage_content_math_sign_enum' => 'string',
        'total_nitrogen_percentage_content' => 'double',
        'total_phosphorus_percentage_content_math_sign_enum' => 'string',
        'total_phosphorus_percentage_content' => 'double',
        'calcium_percentage_content_math_sign_enum' => 'string',
        'calcium_percentage_content' => 'double',
        'magnesium_percentage_content_math_sign_enum' => 'string',
        'magnesium_percentage_content' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'kekos_research_card_id' => 'uuid',
        'batch_of_generated_sediment_id' => 'uuid',
        'research_number' => null,
        'research_date' => 'date-time',
        'ph_reaction' => 'double',
        'dry_matter_content' => 'double',
        'content_of_organic_substances' => 'double',
        'content_of_ammonium_nitrogen' => 'double',
        'content_of_total_nitrogen' => 'double',
        'content_of_total_phosphorus' => 'double',
        'calcium_content' => 'double',
        'magnesium_content' => 'double',
        'number_of_parasitic_eggs' => 'double',
        'salmonella_bacteria' => null,
        'cadmium_content' => 'double',
        'copper_content' => 'double',
        'lead_content' => 'double',
        'mercury_content' => 'double',
        'nickel_content' => 'double',
        'chrome_content' => 'double',
        'zinc_content' => 'double',
        'is_sewage_sludge_form_liquid' => null,
        'is_sewage_sludge_form_mazist' => null,
        'is_sewage_sludge_form_earthy' => null,
        'can_be_edited' => null,
        'dry_matter_percentage_content_math_sign_enum' => null,
        'dry_matter_percentage_content' => 'double',
        'organic_substances_percentage_content_math_sign_enum' => null,
        'organic_substances_percentage_content' => 'double',
        'ammonium_nitrogen_percentage_content_math_sign_enum' => null,
        'ammonium_nitrogen_percentage_content' => 'double',
        'total_nitrogen_percentage_content_math_sign_enum' => null,
        'total_nitrogen_percentage_content' => 'double',
        'total_phosphorus_percentage_content_math_sign_enum' => null,
        'total_phosphorus_percentage_content' => 'double',
        'calcium_percentage_content_math_sign_enum' => null,
        'calcium_percentage_content' => 'double',
        'magnesium_percentage_content_math_sign_enum' => null,
        'magnesium_percentage_content' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'kekos_research_card_id' => 'kekosResearchCardId',
        'batch_of_generated_sediment_id' => 'batchOfGeneratedSedimentId',
        'research_number' => 'researchNumber',
        'research_date' => 'researchDate',
        'ph_reaction' => 'phReaction',
        'dry_matter_content' => 'dryMatterContent',
        'content_of_organic_substances' => 'contentOfOrganicSubstances',
        'content_of_ammonium_nitrogen' => 'contentOfAmmoniumNitrogen',
        'content_of_total_nitrogen' => 'contentOfTotalNitrogen',
        'content_of_total_phosphorus' => 'contentOfTotalPhosphorus',
        'calcium_content' => 'calciumContent',
        'magnesium_content' => 'magnesiumContent',
        'number_of_parasitic_eggs' => 'numberOfParasiticEggs',
        'salmonella_bacteria' => 'salmonellaBacteria',
        'cadmium_content' => 'cadmiumContent',
        'copper_content' => 'copperContent',
        'lead_content' => 'leadContent',
        'mercury_content' => 'mercuryContent',
        'nickel_content' => 'nickelContent',
        'chrome_content' => 'chromeContent',
        'zinc_content' => 'zincContent',
        'is_sewage_sludge_form_liquid' => 'isSewageSludgeFormLiquid',
        'is_sewage_sludge_form_mazist' => 'isSewageSludgeFormMazist',
        'is_sewage_sludge_form_earthy' => 'isSewageSludgeFormEarthy',
        'can_be_edited' => 'canBeEdited',
        'dry_matter_percentage_content_math_sign_enum' => 'dryMatterPercentageContentMathSignEnum',
        'dry_matter_percentage_content' => 'dryMatterPercentageContent',
        'organic_substances_percentage_content_math_sign_enum' => 'organicSubstancesPercentageContentMathSignEnum',
        'organic_substances_percentage_content' => 'organicSubstancesPercentageContent',
        'ammonium_nitrogen_percentage_content_math_sign_enum' => 'ammoniumNitrogenPercentageContentMathSignEnum',
        'ammonium_nitrogen_percentage_content' => 'ammoniumNitrogenPercentageContent',
        'total_nitrogen_percentage_content_math_sign_enum' => 'totalNitrogenPercentageContentMathSignEnum',
        'total_nitrogen_percentage_content' => 'totalNitrogenPercentageContent',
        'total_phosphorus_percentage_content_math_sign_enum' => 'totalPhosphorusPercentageContentMathSignEnum',
        'total_phosphorus_percentage_content' => 'totalPhosphorusPercentageContent',
        'calcium_percentage_content_math_sign_enum' => 'calciumPercentageContentMathSignEnum',
        'calcium_percentage_content' => 'calciumPercentageContent',
        'magnesium_percentage_content_math_sign_enum' => 'magnesiumPercentageContentMathSignEnum',
        'magnesium_percentage_content' => 'magnesiumPercentageContent'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'kekos_research_card_id' => 'setKekosResearchCardId',
        'batch_of_generated_sediment_id' => 'setBatchOfGeneratedSedimentId',
        'research_number' => 'setResearchNumber',
        'research_date' => 'setResearchDate',
        'ph_reaction' => 'setPhReaction',
        'dry_matter_content' => 'setDryMatterContent',
        'content_of_organic_substances' => 'setContentOfOrganicSubstances',
        'content_of_ammonium_nitrogen' => 'setContentOfAmmoniumNitrogen',
        'content_of_total_nitrogen' => 'setContentOfTotalNitrogen',
        'content_of_total_phosphorus' => 'setContentOfTotalPhosphorus',
        'calcium_content' => 'setCalciumContent',
        'magnesium_content' => 'setMagnesiumContent',
        'number_of_parasitic_eggs' => 'setNumberOfParasiticEggs',
        'salmonella_bacteria' => 'setSalmonellaBacteria',
        'cadmium_content' => 'setCadmiumContent',
        'copper_content' => 'setCopperContent',
        'lead_content' => 'setLeadContent',
        'mercury_content' => 'setMercuryContent',
        'nickel_content' => 'setNickelContent',
        'chrome_content' => 'setChromeContent',
        'zinc_content' => 'setZincContent',
        'is_sewage_sludge_form_liquid' => 'setIsSewageSludgeFormLiquid',
        'is_sewage_sludge_form_mazist' => 'setIsSewageSludgeFormMazist',
        'is_sewage_sludge_form_earthy' => 'setIsSewageSludgeFormEarthy',
        'can_be_edited' => 'setCanBeEdited',
        'dry_matter_percentage_content_math_sign_enum' => 'setDryMatterPercentageContentMathSignEnum',
        'dry_matter_percentage_content' => 'setDryMatterPercentageContent',
        'organic_substances_percentage_content_math_sign_enum' => 'setOrganicSubstancesPercentageContentMathSignEnum',
        'organic_substances_percentage_content' => 'setOrganicSubstancesPercentageContent',
        'ammonium_nitrogen_percentage_content_math_sign_enum' => 'setAmmoniumNitrogenPercentageContentMathSignEnum',
        'ammonium_nitrogen_percentage_content' => 'setAmmoniumNitrogenPercentageContent',
        'total_nitrogen_percentage_content_math_sign_enum' => 'setTotalNitrogenPercentageContentMathSignEnum',
        'total_nitrogen_percentage_content' => 'setTotalNitrogenPercentageContent',
        'total_phosphorus_percentage_content_math_sign_enum' => 'setTotalPhosphorusPercentageContentMathSignEnum',
        'total_phosphorus_percentage_content' => 'setTotalPhosphorusPercentageContent',
        'calcium_percentage_content_math_sign_enum' => 'setCalciumPercentageContentMathSignEnum',
        'calcium_percentage_content' => 'setCalciumPercentageContent',
        'magnesium_percentage_content_math_sign_enum' => 'setMagnesiumPercentageContentMathSignEnum',
        'magnesium_percentage_content' => 'setMagnesiumPercentageContent'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'kekos_research_card_id' => 'getKekosResearchCardId',
        'batch_of_generated_sediment_id' => 'getBatchOfGeneratedSedimentId',
        'research_number' => 'getResearchNumber',
        'research_date' => 'getResearchDate',
        'ph_reaction' => 'getPhReaction',
        'dry_matter_content' => 'getDryMatterContent',
        'content_of_organic_substances' => 'getContentOfOrganicSubstances',
        'content_of_ammonium_nitrogen' => 'getContentOfAmmoniumNitrogen',
        'content_of_total_nitrogen' => 'getContentOfTotalNitrogen',
        'content_of_total_phosphorus' => 'getContentOfTotalPhosphorus',
        'calcium_content' => 'getCalciumContent',
        'magnesium_content' => 'getMagnesiumContent',
        'number_of_parasitic_eggs' => 'getNumberOfParasiticEggs',
        'salmonella_bacteria' => 'getSalmonellaBacteria',
        'cadmium_content' => 'getCadmiumContent',
        'copper_content' => 'getCopperContent',
        'lead_content' => 'getLeadContent',
        'mercury_content' => 'getMercuryContent',
        'nickel_content' => 'getNickelContent',
        'chrome_content' => 'getChromeContent',
        'zinc_content' => 'getZincContent',
        'is_sewage_sludge_form_liquid' => 'getIsSewageSludgeFormLiquid',
        'is_sewage_sludge_form_mazist' => 'getIsSewageSludgeFormMazist',
        'is_sewage_sludge_form_earthy' => 'getIsSewageSludgeFormEarthy',
        'can_be_edited' => 'getCanBeEdited',
        'dry_matter_percentage_content_math_sign_enum' => 'getDryMatterPercentageContentMathSignEnum',
        'dry_matter_percentage_content' => 'getDryMatterPercentageContent',
        'organic_substances_percentage_content_math_sign_enum' => 'getOrganicSubstancesPercentageContentMathSignEnum',
        'organic_substances_percentage_content' => 'getOrganicSubstancesPercentageContent',
        'ammonium_nitrogen_percentage_content_math_sign_enum' => 'getAmmoniumNitrogenPercentageContentMathSignEnum',
        'ammonium_nitrogen_percentage_content' => 'getAmmoniumNitrogenPercentageContent',
        'total_nitrogen_percentage_content_math_sign_enum' => 'getTotalNitrogenPercentageContentMathSignEnum',
        'total_nitrogen_percentage_content' => 'getTotalNitrogenPercentageContent',
        'total_phosphorus_percentage_content_math_sign_enum' => 'getTotalPhosphorusPercentageContentMathSignEnum',
        'total_phosphorus_percentage_content' => 'getTotalPhosphorusPercentageContent',
        'calcium_percentage_content_math_sign_enum' => 'getCalciumPercentageContentMathSignEnum',
        'calcium_percentage_content' => 'getCalciumPercentageContent',
        'magnesium_percentage_content_math_sign_enum' => 'getMagnesiumPercentageContentMathSignEnum',
        'magnesium_percentage_content' => 'getMagnesiumPercentageContent'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['kekos_research_card_id'] = isset($data['kekos_research_card_id']) ? $data['kekos_research_card_id'] : null;
        $this->container['batch_of_generated_sediment_id'] = isset($data['batch_of_generated_sediment_id']) ? $data['batch_of_generated_sediment_id'] : null;
        $this->container['research_number'] = isset($data['research_number']) ? $data['research_number'] : null;
        $this->container['research_date'] = isset($data['research_date']) ? $data['research_date'] : null;
        $this->container['ph_reaction'] = isset($data['ph_reaction']) ? $data['ph_reaction'] : null;
        $this->container['dry_matter_content'] = isset($data['dry_matter_content']) ? $data['dry_matter_content'] : null;
        $this->container['content_of_organic_substances'] = isset($data['content_of_organic_substances']) ? $data['content_of_organic_substances'] : null;
        $this->container['content_of_ammonium_nitrogen'] = isset($data['content_of_ammonium_nitrogen']) ? $data['content_of_ammonium_nitrogen'] : null;
        $this->container['content_of_total_nitrogen'] = isset($data['content_of_total_nitrogen']) ? $data['content_of_total_nitrogen'] : null;
        $this->container['content_of_total_phosphorus'] = isset($data['content_of_total_phosphorus']) ? $data['content_of_total_phosphorus'] : null;
        $this->container['calcium_content'] = isset($data['calcium_content']) ? $data['calcium_content'] : null;
        $this->container['magnesium_content'] = isset($data['magnesium_content']) ? $data['magnesium_content'] : null;
        $this->container['number_of_parasitic_eggs'] = isset($data['number_of_parasitic_eggs']) ? $data['number_of_parasitic_eggs'] : null;
        $this->container['salmonella_bacteria'] = isset($data['salmonella_bacteria']) ? $data['salmonella_bacteria'] : null;
        $this->container['cadmium_content'] = isset($data['cadmium_content']) ? $data['cadmium_content'] : null;
        $this->container['copper_content'] = isset($data['copper_content']) ? $data['copper_content'] : null;
        $this->container['lead_content'] = isset($data['lead_content']) ? $data['lead_content'] : null;
        $this->container['mercury_content'] = isset($data['mercury_content']) ? $data['mercury_content'] : null;
        $this->container['nickel_content'] = isset($data['nickel_content']) ? $data['nickel_content'] : null;
        $this->container['chrome_content'] = isset($data['chrome_content']) ? $data['chrome_content'] : null;
        $this->container['zinc_content'] = isset($data['zinc_content']) ? $data['zinc_content'] : null;
        $this->container['is_sewage_sludge_form_liquid'] = isset($data['is_sewage_sludge_form_liquid']) ? $data['is_sewage_sludge_form_liquid'] : null;
        $this->container['is_sewage_sludge_form_mazist'] = isset($data['is_sewage_sludge_form_mazist']) ? $data['is_sewage_sludge_form_mazist'] : null;
        $this->container['is_sewage_sludge_form_earthy'] = isset($data['is_sewage_sludge_form_earthy']) ? $data['is_sewage_sludge_form_earthy'] : null;
        $this->container['can_be_edited'] = isset($data['can_be_edited']) ? $data['can_be_edited'] : null;
        $this->container['dry_matter_percentage_content_math_sign_enum'] = isset($data['dry_matter_percentage_content_math_sign_enum']) ? $data['dry_matter_percentage_content_math_sign_enum'] : null;
        $this->container['dry_matter_percentage_content'] = isset($data['dry_matter_percentage_content']) ? $data['dry_matter_percentage_content'] : null;
        $this->container['organic_substances_percentage_content_math_sign_enum'] = isset($data['organic_substances_percentage_content_math_sign_enum']) ? $data['organic_substances_percentage_content_math_sign_enum'] : null;
        $this->container['organic_substances_percentage_content'] = isset($data['organic_substances_percentage_content']) ? $data['organic_substances_percentage_content'] : null;
        $this->container['ammonium_nitrogen_percentage_content_math_sign_enum'] = isset($data['ammonium_nitrogen_percentage_content_math_sign_enum']) ? $data['ammonium_nitrogen_percentage_content_math_sign_enum'] : null;
        $this->container['ammonium_nitrogen_percentage_content'] = isset($data['ammonium_nitrogen_percentage_content']) ? $data['ammonium_nitrogen_percentage_content'] : null;
        $this->container['total_nitrogen_percentage_content_math_sign_enum'] = isset($data['total_nitrogen_percentage_content_math_sign_enum']) ? $data['total_nitrogen_percentage_content_math_sign_enum'] : null;
        $this->container['total_nitrogen_percentage_content'] = isset($data['total_nitrogen_percentage_content']) ? $data['total_nitrogen_percentage_content'] : null;
        $this->container['total_phosphorus_percentage_content_math_sign_enum'] = isset($data['total_phosphorus_percentage_content_math_sign_enum']) ? $data['total_phosphorus_percentage_content_math_sign_enum'] : null;
        $this->container['total_phosphorus_percentage_content'] = isset($data['total_phosphorus_percentage_content']) ? $data['total_phosphorus_percentage_content'] : null;
        $this->container['calcium_percentage_content_math_sign_enum'] = isset($data['calcium_percentage_content_math_sign_enum']) ? $data['calcium_percentage_content_math_sign_enum'] : null;
        $this->container['calcium_percentage_content'] = isset($data['calcium_percentage_content']) ? $data['calcium_percentage_content'] : null;
        $this->container['magnesium_percentage_content_math_sign_enum'] = isset($data['magnesium_percentage_content_math_sign_enum']) ? $data['magnesium_percentage_content_math_sign_enum'] : null;
        $this->container['magnesium_percentage_content'] = isset($data['magnesium_percentage_content']) ? $data['magnesium_percentage_content'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets kekos_research_card_id
     *
     * @return string
     */
    public function getKekosResearchCardId()
    {
        return $this->container['kekos_research_card_id'];
    }

    /**
     * Sets kekos_research_card_id
     *
     * @param string $kekos_research_card_id Id karty badań
     *
     * @return $this
     */
    public function setKekosResearchCardId($kekos_research_card_id)
    {
        $this->container['kekos_research_card_id'] = $kekos_research_card_id;

        return $this;
    }

    /**
     * Gets batch_of_generated_sediment_id
     *
     * @return string
     */
    public function getBatchOfGeneratedSedimentId()
    {
        return $this->container['batch_of_generated_sediment_id'];
    }

    /**
     * Sets batch_of_generated_sediment_id
     *
     * @param string $batch_of_generated_sediment_id Id wpisu wytworzone osady
     *
     * @return $this
     */
    public function setBatchOfGeneratedSedimentId($batch_of_generated_sediment_id)
    {
        $this->container['batch_of_generated_sediment_id'] = $batch_of_generated_sediment_id;

        return $this;
    }

    /**
     * Gets research_number
     *
     * @return string
     */
    public function getResearchNumber()
    {
        return $this->container['research_number'];
    }

    /**
     * Sets research_number
     *
     * @param string $research_number Numer badania
     *
     * @return $this
     */
    public function setResearchNumber($research_number)
    {
        $this->container['research_number'] = $research_number;

        return $this;
    }

    /**
     * Gets research_date
     *
     * @return \DateTime
     */
    public function getResearchDate()
    {
        return $this->container['research_date'];
    }

    /**
     * Sets research_date
     *
     * @param \DateTime $research_date Data badania
     *
     * @return $this
     */
    public function setResearchDate($research_date)
    {
        $this->container['research_date'] = $research_date;

        return $this;
    }

    /**
     * Gets ph_reaction
     *
     * @return double
     */
    public function getPhReaction()
    {
        return $this->container['ph_reaction'];
    }

    /**
     * Sets ph_reaction
     *
     * @param double $ph_reaction 
     *
     * @return $this
     */
    public function setPhReaction($ph_reaction)
    {
        $this->container['ph_reaction'] = $ph_reaction;

        return $this;
    }

    /**
     * Gets dry_matter_content
     *
     * @return double
     */
    public function getDryMatterContent()
    {
        return $this->container['dry_matter_content'];
    }

    /**
     * Sets dry_matter_content
     *
     * @param double $dry_matter_content Zawartość suchej masy [% s.m.]
     *
     * @return $this
     */
    public function setDryMatterContent($dry_matter_content)
    {
        $this->container['dry_matter_content'] = $dry_matter_content;

        return $this;
    }

    /**
     * Gets content_of_organic_substances
     *
     * @return double
     */
    public function getContentOfOrganicSubstances()
    {
        return $this->container['content_of_organic_substances'];
    }

    /**
     * Sets content_of_organic_substances
     *
     * @param double $content_of_organic_substances Zawartość substancji organicznych [% s.m.]
     *
     * @return $this
     */
    public function setContentOfOrganicSubstances($content_of_organic_substances)
    {
        $this->container['content_of_organic_substances'] = $content_of_organic_substances;

        return $this;
    }

    /**
     * Gets content_of_ammonium_nitrogen
     *
     * @return double
     */
    public function getContentOfAmmoniumNitrogen()
    {
        return $this->container['content_of_ammonium_nitrogen'];
    }

    /**
     * Sets content_of_ammonium_nitrogen
     *
     * @param double $content_of_ammonium_nitrogen Zawartość azotu ogólnego [% s.m.]
     *
     * @return $this
     */
    public function setContentOfAmmoniumNitrogen($content_of_ammonium_nitrogen)
    {
        $this->container['content_of_ammonium_nitrogen'] = $content_of_ammonium_nitrogen;

        return $this;
    }

    /**
     * Gets content_of_total_nitrogen
     *
     * @return double
     */
    public function getContentOfTotalNitrogen()
    {
        return $this->container['content_of_total_nitrogen'];
    }

    /**
     * Sets content_of_total_nitrogen
     *
     * @param double $content_of_total_nitrogen w tym azotu amonowego[% s.m.]
     *
     * @return $this
     */
    public function setContentOfTotalNitrogen($content_of_total_nitrogen)
    {
        $this->container['content_of_total_nitrogen'] = $content_of_total_nitrogen;

        return $this;
    }

    /**
     * Gets content_of_total_phosphorus
     *
     * @return double
     */
    public function getContentOfTotalPhosphorus()
    {
        return $this->container['content_of_total_phosphorus'];
    }

    /**
     * Sets content_of_total_phosphorus
     *
     * @param double $content_of_total_phosphorus Zawartość fosforu ogólnego [% s.m.]
     *
     * @return $this
     */
    public function setContentOfTotalPhosphorus($content_of_total_phosphorus)
    {
        $this->container['content_of_total_phosphorus'] = $content_of_total_phosphorus;

        return $this;
    }

    /**
     * Gets calcium_content
     *
     * @return double
     */
    public function getCalciumContent()
    {
        return $this->container['calcium_content'];
    }

    /**
     * Sets calcium_content
     *
     * @param double $calcium_content Zawartość wapnia [% s.m.]
     *
     * @return $this
     */
    public function setCalciumContent($calcium_content)
    {
        $this->container['calcium_content'] = $calcium_content;

        return $this;
    }

    /**
     * Gets magnesium_content
     *
     * @return double
     */
    public function getMagnesiumContent()
    {
        return $this->container['magnesium_content'];
    }

    /**
     * Sets magnesium_content
     *
     * @param double $magnesium_content Zawartość magnezu [% s.m.]
     *
     * @return $this
     */
    public function setMagnesiumContent($magnesium_content)
    {
        $this->container['magnesium_content'] = $magnesium_content;

        return $this;
    }

    /**
     * Gets number_of_parasitic_eggs
     *
     * @return double
     */
    public function getNumberOfParasiticEggs()
    {
        return $this->container['number_of_parasitic_eggs'];
    }

    /**
     * Sets number_of_parasitic_eggs
     *
     * @param double $number_of_parasitic_eggs Łączna liczba żywych jaj pasożytów [liczba/kg s.m osadu]
     *
     * @return $this
     */
    public function setNumberOfParasiticEggs($number_of_parasitic_eggs)
    {
        $this->container['number_of_parasitic_eggs'] = $number_of_parasitic_eggs;

        return $this;
    }

    /**
     * Gets salmonella_bacteria
     *
     * @return bool
     */
    public function getSalmonellaBacteria()
    {
        return $this->container['salmonella_bacteria'];
    }

    /**
     * Sets salmonella_bacteria
     *
     * @param bool $salmonella_bacteria Bakterie z rodzaju Salmonella w 100g osadów przeznaczonych do badań
     *
     * @return $this
     */
    public function setSalmonellaBacteria($salmonella_bacteria)
    {
        $this->container['salmonella_bacteria'] = $salmonella_bacteria;

        return $this;
    }

    /**
     * Gets cadmium_content
     *
     * @return double
     */
    public function getCadmiumContent()
    {
        return $this->container['cadmium_content'];
    }

    /**
     * Sets cadmium_content
     *
     * @param double $cadmium_content Kadm [mg/kg s.m.]
     *
     * @return $this
     */
    public function setCadmiumContent($cadmium_content)
    {
        $this->container['cadmium_content'] = $cadmium_content;

        return $this;
    }

    /**
     * Gets copper_content
     *
     * @return double
     */
    public function getCopperContent()
    {
        return $this->container['copper_content'];
    }

    /**
     * Sets copper_content
     *
     * @param double $copper_content Miedź [mg/kg s.m.]
     *
     * @return $this
     */
    public function setCopperContent($copper_content)
    {
        $this->container['copper_content'] = $copper_content;

        return $this;
    }

    /**
     * Gets lead_content
     *
     * @return double
     */
    public function getLeadContent()
    {
        return $this->container['lead_content'];
    }

    /**
     * Sets lead_content
     *
     * @param double $lead_content Ołów [mg/kg s.m.]
     *
     * @return $this
     */
    public function setLeadContent($lead_content)
    {
        $this->container['lead_content'] = $lead_content;

        return $this;
    }

    /**
     * Gets mercury_content
     *
     * @return double
     */
    public function getMercuryContent()
    {
        return $this->container['mercury_content'];
    }

    /**
     * Sets mercury_content
     *
     * @param double $mercury_content Rtęć [mg/kg s.m.]
     *
     * @return $this
     */
    public function setMercuryContent($mercury_content)
    {
        $this->container['mercury_content'] = $mercury_content;

        return $this;
    }

    /**
     * Gets nickel_content
     *
     * @return double
     */
    public function getNickelContent()
    {
        return $this->container['nickel_content'];
    }

    /**
     * Sets nickel_content
     *
     * @param double $nickel_content Nikiel [mg/kg s.m.]
     *
     * @return $this
     */
    public function setNickelContent($nickel_content)
    {
        $this->container['nickel_content'] = $nickel_content;

        return $this;
    }

    /**
     * Gets chrome_content
     *
     * @return double
     */
    public function getChromeContent()
    {
        return $this->container['chrome_content'];
    }

    /**
     * Sets chrome_content
     *
     * @param double $chrome_content Chrom [mg/kg s.m.]
     *
     * @return $this
     */
    public function setChromeContent($chrome_content)
    {
        $this->container['chrome_content'] = $chrome_content;

        return $this;
    }

    /**
     * Gets zinc_content
     *
     * @return double
     */
    public function getZincContent()
    {
        return $this->container['zinc_content'];
    }

    /**
     * Sets zinc_content
     *
     * @param double $zinc_content Cynk [mg/kg s.m.]
     *
     * @return $this
     */
    public function setZincContent($zinc_content)
    {
        $this->container['zinc_content'] = $zinc_content;

        return $this;
    }

    /**
     * Gets is_sewage_sludge_form_liquid
     *
     * @return bool
     */
    public function getIsSewageSludgeFormLiquid()
    {
        return $this->container['is_sewage_sludge_form_liquid'];
    }

    /**
     * Sets is_sewage_sludge_form_liquid
     *
     * @param bool $is_sewage_sludge_form_liquid Postać komunalnych osadów ściekowych: płynna
     *
     * @return $this
     */
    public function setIsSewageSludgeFormLiquid($is_sewage_sludge_form_liquid)
    {
        $this->container['is_sewage_sludge_form_liquid'] = $is_sewage_sludge_form_liquid;

        return $this;
    }

    /**
     * Gets is_sewage_sludge_form_mazist
     *
     * @return bool
     */
    public function getIsSewageSludgeFormMazist()
    {
        return $this->container['is_sewage_sludge_form_mazist'];
    }

    /**
     * Sets is_sewage_sludge_form_mazist
     *
     * @param bool $is_sewage_sludge_form_mazist Postać komunalnych osadów ściekowych: mazista
     *
     * @return $this
     */
    public function setIsSewageSludgeFormMazist($is_sewage_sludge_form_mazist)
    {
        $this->container['is_sewage_sludge_form_mazist'] = $is_sewage_sludge_form_mazist;

        return $this;
    }

    /**
     * Gets is_sewage_sludge_form_earthy
     *
     * @return bool
     */
    public function getIsSewageSludgeFormEarthy()
    {
        return $this->container['is_sewage_sludge_form_earthy'];
    }

    /**
     * Sets is_sewage_sludge_form_earthy
     *
     * @param bool $is_sewage_sludge_form_earthy Postać komunalnych osadów ściekowych: ziemista
     *
     * @return $this
     */
    public function setIsSewageSludgeFormEarthy($is_sewage_sludge_form_earthy)
    {
        $this->container['is_sewage_sludge_form_earthy'] = $is_sewage_sludge_form_earthy;

        return $this;
    }

    /**
     * Gets can_be_edited
     *
     * @return bool
     */
    public function getCanBeEdited()
    {
        return $this->container['can_be_edited'];
    }

    /**
     * Sets can_be_edited
     *
     * @param bool $can_be_edited 
     *
     * @return $this
     */
    public function setCanBeEdited($can_be_edited)
    {
        $this->container['can_be_edited'] = $can_be_edited;

        return $this;
    }

    /**
     * Gets dry_matter_percentage_content_math_sign_enum
     *
     * @return string
     */
    public function getDryMatterPercentageContentMathSignEnum()
    {
        return $this->container['dry_matter_percentage_content_math_sign_enum'];
    }

    /**
     * Sets dry_matter_percentage_content_math_sign_enum
     *
     * @param string $dry_matter_percentage_content_math_sign_enum dry_matter_percentage_content_math_sign_enum
     *
     * @return $this
     */
    public function setDryMatterPercentageContentMathSignEnum($dry_matter_percentage_content_math_sign_enum)
    {
        $this->container['dry_matter_percentage_content_math_sign_enum'] = $dry_matter_percentage_content_math_sign_enum;

        return $this;
    }

    /**
     * Gets dry_matter_percentage_content
     *
     * @return double
     */
    public function getDryMatterPercentageContent()
    {
        return $this->container['dry_matter_percentage_content'];
    }

    /**
     * Sets dry_matter_percentage_content
     *
     * @param double $dry_matter_percentage_content dry_matter_percentage_content
     *
     * @return $this
     */
    public function setDryMatterPercentageContent($dry_matter_percentage_content)
    {
        $this->container['dry_matter_percentage_content'] = $dry_matter_percentage_content;

        return $this;
    }

    /**
     * Gets organic_substances_percentage_content_math_sign_enum
     *
     * @return string
     */
    public function getOrganicSubstancesPercentageContentMathSignEnum()
    {
        return $this->container['organic_substances_percentage_content_math_sign_enum'];
    }

    /**
     * Sets organic_substances_percentage_content_math_sign_enum
     *
     * @param string $organic_substances_percentage_content_math_sign_enum organic_substances_percentage_content_math_sign_enum
     *
     * @return $this
     */
    public function setOrganicSubstancesPercentageContentMathSignEnum($organic_substances_percentage_content_math_sign_enum)
    {
        $this->container['organic_substances_percentage_content_math_sign_enum'] = $organic_substances_percentage_content_math_sign_enum;

        return $this;
    }

    /**
     * Gets organic_substances_percentage_content
     *
     * @return double
     */
    public function getOrganicSubstancesPercentageContent()
    {
        return $this->container['organic_substances_percentage_content'];
    }

    /**
     * Sets organic_substances_percentage_content
     *
     * @param double $organic_substances_percentage_content organic_substances_percentage_content
     *
     * @return $this
     */
    public function setOrganicSubstancesPercentageContent($organic_substances_percentage_content)
    {
        $this->container['organic_substances_percentage_content'] = $organic_substances_percentage_content;

        return $this;
    }

    /**
     * Gets ammonium_nitrogen_percentage_content_math_sign_enum
     *
     * @return string
     */
    public function getAmmoniumNitrogenPercentageContentMathSignEnum()
    {
        return $this->container['ammonium_nitrogen_percentage_content_math_sign_enum'];
    }

    /**
     * Sets ammonium_nitrogen_percentage_content_math_sign_enum
     *
     * @param string $ammonium_nitrogen_percentage_content_math_sign_enum ammonium_nitrogen_percentage_content_math_sign_enum
     *
     * @return $this
     */
    public function setAmmoniumNitrogenPercentageContentMathSignEnum($ammonium_nitrogen_percentage_content_math_sign_enum)
    {
        $this->container['ammonium_nitrogen_percentage_content_math_sign_enum'] = $ammonium_nitrogen_percentage_content_math_sign_enum;

        return $this;
    }

    /**
     * Gets ammonium_nitrogen_percentage_content
     *
     * @return double
     */
    public function getAmmoniumNitrogenPercentageContent()
    {
        return $this->container['ammonium_nitrogen_percentage_content'];
    }

    /**
     * Sets ammonium_nitrogen_percentage_content
     *
     * @param double $ammonium_nitrogen_percentage_content ammonium_nitrogen_percentage_content
     *
     * @return $this
     */
    public function setAmmoniumNitrogenPercentageContent($ammonium_nitrogen_percentage_content)
    {
        $this->container['ammonium_nitrogen_percentage_content'] = $ammonium_nitrogen_percentage_content;

        return $this;
    }

    /**
     * Gets total_nitrogen_percentage_content_math_sign_enum
     *
     * @return string
     */
    public function getTotalNitrogenPercentageContentMathSignEnum()
    {
        return $this->container['total_nitrogen_percentage_content_math_sign_enum'];
    }

    /**
     * Sets total_nitrogen_percentage_content_math_sign_enum
     *
     * @param string $total_nitrogen_percentage_content_math_sign_enum total_nitrogen_percentage_content_math_sign_enum
     *
     * @return $this
     */
    public function setTotalNitrogenPercentageContentMathSignEnum($total_nitrogen_percentage_content_math_sign_enum)
    {
        $this->container['total_nitrogen_percentage_content_math_sign_enum'] = $total_nitrogen_percentage_content_math_sign_enum;

        return $this;
    }

    /**
     * Gets total_nitrogen_percentage_content
     *
     * @return double
     */
    public function getTotalNitrogenPercentageContent()
    {
        return $this->container['total_nitrogen_percentage_content'];
    }

    /**
     * Sets total_nitrogen_percentage_content
     *
     * @param double $total_nitrogen_percentage_content total_nitrogen_percentage_content
     *
     * @return $this
     */
    public function setTotalNitrogenPercentageContent($total_nitrogen_percentage_content)
    {
        $this->container['total_nitrogen_percentage_content'] = $total_nitrogen_percentage_content;

        return $this;
    }

    /**
     * Gets total_phosphorus_percentage_content_math_sign_enum
     *
     * @return string
     */
    public function getTotalPhosphorusPercentageContentMathSignEnum()
    {
        return $this->container['total_phosphorus_percentage_content_math_sign_enum'];
    }

    /**
     * Sets total_phosphorus_percentage_content_math_sign_enum
     *
     * @param string $total_phosphorus_percentage_content_math_sign_enum total_phosphorus_percentage_content_math_sign_enum
     *
     * @return $this
     */
    public function setTotalPhosphorusPercentageContentMathSignEnum($total_phosphorus_percentage_content_math_sign_enum)
    {
        $this->container['total_phosphorus_percentage_content_math_sign_enum'] = $total_phosphorus_percentage_content_math_sign_enum;

        return $this;
    }

    /**
     * Gets total_phosphorus_percentage_content
     *
     * @return double
     */
    public function getTotalPhosphorusPercentageContent()
    {
        return $this->container['total_phosphorus_percentage_content'];
    }

    /**
     * Sets total_phosphorus_percentage_content
     *
     * @param double $total_phosphorus_percentage_content total_phosphorus_percentage_content
     *
     * @return $this
     */
    public function setTotalPhosphorusPercentageContent($total_phosphorus_percentage_content)
    {
        $this->container['total_phosphorus_percentage_content'] = $total_phosphorus_percentage_content;

        return $this;
    }

    /**
     * Gets calcium_percentage_content_math_sign_enum
     *
     * @return string
     */
    public function getCalciumPercentageContentMathSignEnum()
    {
        return $this->container['calcium_percentage_content_math_sign_enum'];
    }

    /**
     * Sets calcium_percentage_content_math_sign_enum
     *
     * @param string $calcium_percentage_content_math_sign_enum calcium_percentage_content_math_sign_enum
     *
     * @return $this
     */
    public function setCalciumPercentageContentMathSignEnum($calcium_percentage_content_math_sign_enum)
    {
        $this->container['calcium_percentage_content_math_sign_enum'] = $calcium_percentage_content_math_sign_enum;

        return $this;
    }

    /**
     * Gets calcium_percentage_content
     *
     * @return double
     */
    public function getCalciumPercentageContent()
    {
        return $this->container['calcium_percentage_content'];
    }

    /**
     * Sets calcium_percentage_content
     *
     * @param double $calcium_percentage_content calcium_percentage_content
     *
     * @return $this
     */
    public function setCalciumPercentageContent($calcium_percentage_content)
    {
        $this->container['calcium_percentage_content'] = $calcium_percentage_content;

        return $this;
    }

    /**
     * Gets magnesium_percentage_content_math_sign_enum
     *
     * @return string
     */
    public function getMagnesiumPercentageContentMathSignEnum()
    {
        return $this->container['magnesium_percentage_content_math_sign_enum'];
    }

    /**
     * Sets magnesium_percentage_content_math_sign_enum
     *
     * @param string $magnesium_percentage_content_math_sign_enum magnesium_percentage_content_math_sign_enum
     *
     * @return $this
     */
    public function setMagnesiumPercentageContentMathSignEnum($magnesium_percentage_content_math_sign_enum)
    {
        $this->container['magnesium_percentage_content_math_sign_enum'] = $magnesium_percentage_content_math_sign_enum;

        return $this;
    }

    /**
     * Gets magnesium_percentage_content
     *
     * @return double
     */
    public function getMagnesiumPercentageContent()
    {
        return $this->container['magnesium_percentage_content'];
    }

    /**
     * Sets magnesium_percentage_content
     *
     * @param double $magnesium_percentage_content magnesium_percentage_content
     *
     * @return $this
     */
    public function setMagnesiumPercentageContent($magnesium_percentage_content)
    {
        $this->container['magnesium_percentage_content'] = $magnesium_percentage_content;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


