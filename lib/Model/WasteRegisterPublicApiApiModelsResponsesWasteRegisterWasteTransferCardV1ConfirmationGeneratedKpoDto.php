<?php
/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1ConfirmationGeneratedKpoDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'WasteRegisterPublic.Api.ApiModels.Responses.WasteRegister.WasteTransferCard.V1.ConfirmationGeneratedKpoDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'kpo_id' => 'string',
        'year' => 'int',
        'card_number' => 'string',
        'card_status_id' => 'int',
        'card_status' => 'string',
        'sender_company_id' => 'string',
        'sender_eup_id' => 'string',
        'carrier_company_id' => 'string',
        'receiver_company_id' => 'string',
        'receiver_eup_id' => 'string',
        'waste_code_id' => 'int',
        'vehicle_reg_number' => 'string',
        'waste_mass' => 'double',
        'planned_transport_time' => '\DateTime',
        'card_approval_time' => '\DateTime',
        'approval_user' => 'string',
        'real_transport_time' => '\DateTime',
        'waste_process_id' => 'int',
        'certificate_number_and_box_numbers' => 'string',
        'generating_confirmation_user' => 'string',
        'generating_confirmation_time' => '\DateTime',
        'card_status_code_name' => 'string',
        'is_revised' => 'bool',
        'revised_at' => '\DateTime',
        'revised_by' => 'string',
        'revised_waste_mass' => 'double',
        'revised_waste_code_id' => 'int',
        'additional_info' => 'string',
        'waste_code_extended' => 'bool',
        'waste_code_extended_description' => 'string',
        'hazardous_waste_reclassification' => 'bool',
        'hazardous_waste_reclassification_description' => 'string',
        'is_waste_generating' => 'bool',
        'waste_generated_teryt' => 'string',
        'waste_generating_additional_info' => 'string',
        'waste_generated_teryt_pk' => 'string',
        'rejected_by_user' => 'string',
        'card_rejection_time' => '\DateTime',
        'remarks' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'kpo_id' => 'uuid',
        'year' => 'int32',
        'card_number' => null,
        'card_status_id' => 'int32',
        'card_status' => null,
        'sender_company_id' => 'uuid',
        'sender_eup_id' => 'uuid',
        'carrier_company_id' => 'uuid',
        'receiver_company_id' => 'uuid',
        'receiver_eup_id' => 'uuid',
        'waste_code_id' => 'int32',
        'vehicle_reg_number' => null,
        'waste_mass' => 'double',
        'planned_transport_time' => 'date-time',
        'card_approval_time' => 'date-time',
        'approval_user' => null,
        'real_transport_time' => 'date-time',
        'waste_process_id' => 'int32',
        'certificate_number_and_box_numbers' => null,
        'generating_confirmation_user' => null,
        'generating_confirmation_time' => 'date-time',
        'card_status_code_name' => null,
        'is_revised' => null,
        'revised_at' => 'date-time',
        'revised_by' => null,
        'revised_waste_mass' => 'double',
        'revised_waste_code_id' => 'int32',
        'additional_info' => null,
        'waste_code_extended' => null,
        'waste_code_extended_description' => null,
        'hazardous_waste_reclassification' => null,
        'hazardous_waste_reclassification_description' => null,
        'is_waste_generating' => null,
        'waste_generated_teryt' => null,
        'waste_generating_additional_info' => null,
        'waste_generated_teryt_pk' => null,
        'rejected_by_user' => null,
        'card_rejection_time' => 'date-time',
        'remarks' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'kpo_id' => 'kpoId',
        'year' => 'year',
        'card_number' => 'cardNumber',
        'card_status_id' => 'cardStatusId',
        'card_status' => 'cardStatus',
        'sender_company_id' => 'senderCompanyId',
        'sender_eup_id' => 'senderEupId',
        'carrier_company_id' => 'carrierCompanyId',
        'receiver_company_id' => 'receiverCompanyId',
        'receiver_eup_id' => 'receiverEupId',
        'waste_code_id' => 'wasteCodeId',
        'vehicle_reg_number' => 'vehicleRegNumber',
        'waste_mass' => 'wasteMass',
        'planned_transport_time' => 'plannedTransportTime',
        'card_approval_time' => 'cardApprovalTime',
        'approval_user' => 'approvalUser',
        'real_transport_time' => 'realTransportTime',
        'waste_process_id' => 'wasteProcessId',
        'certificate_number_and_box_numbers' => 'certificateNumberAndBoxNumbers',
        'generating_confirmation_user' => 'generatingConfirmationUser',
        'generating_confirmation_time' => 'generatingConfirmationTime',
        'card_status_code_name' => 'cardStatusCodeName',
        'is_revised' => 'isRevised',
        'revised_at' => 'revisedAt',
        'revised_by' => 'revisedBy',
        'revised_waste_mass' => 'revisedWasteMass',
        'revised_waste_code_id' => 'revisedWasteCodeId',
        'additional_info' => 'additionalInfo',
        'waste_code_extended' => 'wasteCodeExtended',
        'waste_code_extended_description' => 'wasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'hazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'hazardousWasteReclassificationDescription',
        'is_waste_generating' => 'isWasteGenerating',
        'waste_generated_teryt' => 'wasteGeneratedTeryt',
        'waste_generating_additional_info' => 'wasteGeneratingAdditionalInfo',
        'waste_generated_teryt_pk' => 'wasteGeneratedTerytPk',
        'rejected_by_user' => 'rejectedByUser',
        'card_rejection_time' => 'cardRejectionTime',
        'remarks' => 'remarks'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'kpo_id' => 'setKpoId',
        'year' => 'setYear',
        'card_number' => 'setCardNumber',
        'card_status_id' => 'setCardStatusId',
        'card_status' => 'setCardStatus',
        'sender_company_id' => 'setSenderCompanyId',
        'sender_eup_id' => 'setSenderEupId',
        'carrier_company_id' => 'setCarrierCompanyId',
        'receiver_company_id' => 'setReceiverCompanyId',
        'receiver_eup_id' => 'setReceiverEupId',
        'waste_code_id' => 'setWasteCodeId',
        'vehicle_reg_number' => 'setVehicleRegNumber',
        'waste_mass' => 'setWasteMass',
        'planned_transport_time' => 'setPlannedTransportTime',
        'card_approval_time' => 'setCardApprovalTime',
        'approval_user' => 'setApprovalUser',
        'real_transport_time' => 'setRealTransportTime',
        'waste_process_id' => 'setWasteProcessId',
        'certificate_number_and_box_numbers' => 'setCertificateNumberAndBoxNumbers',
        'generating_confirmation_user' => 'setGeneratingConfirmationUser',
        'generating_confirmation_time' => 'setGeneratingConfirmationTime',
        'card_status_code_name' => 'setCardStatusCodeName',
        'is_revised' => 'setIsRevised',
        'revised_at' => 'setRevisedAt',
        'revised_by' => 'setRevisedBy',
        'revised_waste_mass' => 'setRevisedWasteMass',
        'revised_waste_code_id' => 'setRevisedWasteCodeId',
        'additional_info' => 'setAdditionalInfo',
        'waste_code_extended' => 'setWasteCodeExtended',
        'waste_code_extended_description' => 'setWasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'setHazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'setHazardousWasteReclassificationDescription',
        'is_waste_generating' => 'setIsWasteGenerating',
        'waste_generated_teryt' => 'setWasteGeneratedTeryt',
        'waste_generating_additional_info' => 'setWasteGeneratingAdditionalInfo',
        'waste_generated_teryt_pk' => 'setWasteGeneratedTerytPk',
        'rejected_by_user' => 'setRejectedByUser',
        'card_rejection_time' => 'setCardRejectionTime',
        'remarks' => 'setRemarks'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'kpo_id' => 'getKpoId',
        'year' => 'getYear',
        'card_number' => 'getCardNumber',
        'card_status_id' => 'getCardStatusId',
        'card_status' => 'getCardStatus',
        'sender_company_id' => 'getSenderCompanyId',
        'sender_eup_id' => 'getSenderEupId',
        'carrier_company_id' => 'getCarrierCompanyId',
        'receiver_company_id' => 'getReceiverCompanyId',
        'receiver_eup_id' => 'getReceiverEupId',
        'waste_code_id' => 'getWasteCodeId',
        'vehicle_reg_number' => 'getVehicleRegNumber',
        'waste_mass' => 'getWasteMass',
        'planned_transport_time' => 'getPlannedTransportTime',
        'card_approval_time' => 'getCardApprovalTime',
        'approval_user' => 'getApprovalUser',
        'real_transport_time' => 'getRealTransportTime',
        'waste_process_id' => 'getWasteProcessId',
        'certificate_number_and_box_numbers' => 'getCertificateNumberAndBoxNumbers',
        'generating_confirmation_user' => 'getGeneratingConfirmationUser',
        'generating_confirmation_time' => 'getGeneratingConfirmationTime',
        'card_status_code_name' => 'getCardStatusCodeName',
        'is_revised' => 'getIsRevised',
        'revised_at' => 'getRevisedAt',
        'revised_by' => 'getRevisedBy',
        'revised_waste_mass' => 'getRevisedWasteMass',
        'revised_waste_code_id' => 'getRevisedWasteCodeId',
        'additional_info' => 'getAdditionalInfo',
        'waste_code_extended' => 'getWasteCodeExtended',
        'waste_code_extended_description' => 'getWasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'getHazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'getHazardousWasteReclassificationDescription',
        'is_waste_generating' => 'getIsWasteGenerating',
        'waste_generated_teryt' => 'getWasteGeneratedTeryt',
        'waste_generating_additional_info' => 'getWasteGeneratingAdditionalInfo',
        'waste_generated_teryt_pk' => 'getWasteGeneratedTerytPk',
        'rejected_by_user' => 'getRejectedByUser',
        'card_rejection_time' => 'getCardRejectionTime',
        'remarks' => 'getRemarks'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['kpo_id'] = isset($data['kpo_id']) ? $data['kpo_id'] : null;
        $this->container['year'] = isset($data['year']) ? $data['year'] : null;
        $this->container['card_number'] = isset($data['card_number']) ? $data['card_number'] : null;
        $this->container['card_status_id'] = isset($data['card_status_id']) ? $data['card_status_id'] : null;
        $this->container['card_status'] = isset($data['card_status']) ? $data['card_status'] : null;
        $this->container['sender_company_id'] = isset($data['sender_company_id']) ? $data['sender_company_id'] : null;
        $this->container['sender_eup_id'] = isset($data['sender_eup_id']) ? $data['sender_eup_id'] : null;
        $this->container['carrier_company_id'] = isset($data['carrier_company_id']) ? $data['carrier_company_id'] : null;
        $this->container['receiver_company_id'] = isset($data['receiver_company_id']) ? $data['receiver_company_id'] : null;
        $this->container['receiver_eup_id'] = isset($data['receiver_eup_id']) ? $data['receiver_eup_id'] : null;
        $this->container['waste_code_id'] = isset($data['waste_code_id']) ? $data['waste_code_id'] : null;
        $this->container['vehicle_reg_number'] = isset($data['vehicle_reg_number']) ? $data['vehicle_reg_number'] : null;
        $this->container['waste_mass'] = isset($data['waste_mass']) ? $data['waste_mass'] : null;
        $this->container['planned_transport_time'] = isset($data['planned_transport_time']) ? $data['planned_transport_time'] : null;
        $this->container['card_approval_time'] = isset($data['card_approval_time']) ? $data['card_approval_time'] : null;
        $this->container['approval_user'] = isset($data['approval_user']) ? $data['approval_user'] : null;
        $this->container['real_transport_time'] = isset($data['real_transport_time']) ? $data['real_transport_time'] : null;
        $this->container['waste_process_id'] = isset($data['waste_process_id']) ? $data['waste_process_id'] : null;
        $this->container['certificate_number_and_box_numbers'] = isset($data['certificate_number_and_box_numbers']) ? $data['certificate_number_and_box_numbers'] : null;
        $this->container['generating_confirmation_user'] = isset($data['generating_confirmation_user']) ? $data['generating_confirmation_user'] : null;
        $this->container['generating_confirmation_time'] = isset($data['generating_confirmation_time']) ? $data['generating_confirmation_time'] : null;
        $this->container['card_status_code_name'] = isset($data['card_status_code_name']) ? $data['card_status_code_name'] : null;
        $this->container['is_revised'] = isset($data['is_revised']) ? $data['is_revised'] : null;
        $this->container['revised_at'] = isset($data['revised_at']) ? $data['revised_at'] : null;
        $this->container['revised_by'] = isset($data['revised_by']) ? $data['revised_by'] : null;
        $this->container['revised_waste_mass'] = isset($data['revised_waste_mass']) ? $data['revised_waste_mass'] : null;
        $this->container['revised_waste_code_id'] = isset($data['revised_waste_code_id']) ? $data['revised_waste_code_id'] : null;
        $this->container['additional_info'] = isset($data['additional_info']) ? $data['additional_info'] : null;
        $this->container['waste_code_extended'] = isset($data['waste_code_extended']) ? $data['waste_code_extended'] : null;
        $this->container['waste_code_extended_description'] = isset($data['waste_code_extended_description']) ? $data['waste_code_extended_description'] : null;
        $this->container['hazardous_waste_reclassification'] = isset($data['hazardous_waste_reclassification']) ? $data['hazardous_waste_reclassification'] : null;
        $this->container['hazardous_waste_reclassification_description'] = isset($data['hazardous_waste_reclassification_description']) ? $data['hazardous_waste_reclassification_description'] : null;
        $this->container['is_waste_generating'] = isset($data['is_waste_generating']) ? $data['is_waste_generating'] : null;
        $this->container['waste_generated_teryt'] = isset($data['waste_generated_teryt']) ? $data['waste_generated_teryt'] : null;
        $this->container['waste_generating_additional_info'] = isset($data['waste_generating_additional_info']) ? $data['waste_generating_additional_info'] : null;
        $this->container['waste_generated_teryt_pk'] = isset($data['waste_generated_teryt_pk']) ? $data['waste_generated_teryt_pk'] : null;
        $this->container['rejected_by_user'] = isset($data['rejected_by_user']) ? $data['rejected_by_user'] : null;
        $this->container['card_rejection_time'] = isset($data['card_rejection_time']) ? $data['card_rejection_time'] : null;
        $this->container['remarks'] = isset($data['remarks']) ? $data['remarks'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets kpo_id
     *
     * @return string
     */
    public function getKpoId()
    {
        return $this->container['kpo_id'];
    }

    /**
     * Sets kpo_id
     *
     * @param string $kpo_id Id karty przekazania odpadów
     *
     * @return $this
     */
    public function setKpoId($kpo_id)
    {
        $this->container['kpo_id'] = $kpo_id;

        return $this;
    }

    /**
     * Gets year
     *
     * @return int
     */
    public function getYear()
    {
        return $this->container['year'];
    }

    /**
     * Sets year
     *
     * @param int $year Rok kalendarzowy
     *
     * @return $this
     */
    public function setYear($year)
    {
        $this->container['year'] = $year;

        return $this;
    }

    /**
     * Gets card_number
     *
     * @return string
     */
    public function getCardNumber()
    {
        return $this->container['card_number'];
    }

    /**
     * Sets card_number
     *
     * @param string $card_number Numer Karty Przekazania Odpadów
     *
     * @return $this
     */
    public function setCardNumber($card_number)
    {
        $this->container['card_number'] = $card_number;

        return $this;
    }

    /**
     * Gets card_status_id
     *
     * @return int
     */
    public function getCardStatusId()
    {
        return $this->container['card_status_id'];
    }

    /**
     * Sets card_status_id
     *
     * @param int $card_status_id Id statusu Karty Przekazania Odpadów
     *
     * @return $this
     */
    public function setCardStatusId($card_status_id)
    {
        $this->container['card_status_id'] = $card_status_id;

        return $this;
    }

    /**
     * Gets card_status
     *
     * @return string
     */
    public function getCardStatus()
    {
        return $this->container['card_status'];
    }

    /**
     * Sets card_status
     *
     * @param string $card_status Status karty
     *
     * @return $this
     */
    public function setCardStatus($card_status)
    {
        $this->container['card_status'] = $card_status;

        return $this;
    }

    /**
     * Gets sender_company_id
     *
     * @return string
     */
    public function getSenderCompanyId()
    {
        return $this->container['sender_company_id'];
    }

    /**
     * Sets sender_company_id
     *
     * @param string $sender_company_id Id podmiotu przekazującego odpady
     *
     * @return $this
     */
    public function setSenderCompanyId($sender_company_id)
    {
        $this->container['sender_company_id'] = $sender_company_id;

        return $this;
    }

    /**
     * Gets sender_eup_id
     *
     * @return string
     */
    public function getSenderEupId()
    {
        return $this->container['sender_eup_id'];
    }

    /**
     * Sets sender_eup_id
     *
     * @param string $sender_eup_id Id miejsca prowadzenia działalności przekazującego odpady
     *
     * @return $this
     */
    public function setSenderEupId($sender_eup_id)
    {
        $this->container['sender_eup_id'] = $sender_eup_id;

        return $this;
    }

    /**
     * Gets carrier_company_id
     *
     * @return string
     */
    public function getCarrierCompanyId()
    {
        return $this->container['carrier_company_id'];
    }

    /**
     * Sets carrier_company_id
     *
     * @param string $carrier_company_id Id podmiotu transportującego odpady
     *
     * @return $this
     */
    public function setCarrierCompanyId($carrier_company_id)
    {
        $this->container['carrier_company_id'] = $carrier_company_id;

        return $this;
    }

    /**
     * Gets receiver_company_id
     *
     * @return string
     */
    public function getReceiverCompanyId()
    {
        return $this->container['receiver_company_id'];
    }

    /**
     * Sets receiver_company_id
     *
     * @param string $receiver_company_id Id podmiotu przejmującego odpady
     *
     * @return $this
     */
    public function setReceiverCompanyId($receiver_company_id)
    {
        $this->container['receiver_company_id'] = $receiver_company_id;

        return $this;
    }

    /**
     * Gets receiver_eup_id
     *
     * @return string
     */
    public function getReceiverEupId()
    {
        return $this->container['receiver_eup_id'];
    }

    /**
     * Sets receiver_eup_id
     *
     * @param string $receiver_eup_id Id miejsca prowadzenia działalności przejmującego odpady
     *
     * @return $this
     */
    public function setReceiverEupId($receiver_eup_id)
    {
        $this->container['receiver_eup_id'] = $receiver_eup_id;

        return $this;
    }

    /**
     * Gets waste_code_id
     *
     * @return int
     */
    public function getWasteCodeId()
    {
        return $this->container['waste_code_id'];
    }

    /**
     * Sets waste_code_id
     *
     * @param int $waste_code_id Id kodu odpadu
     *
     * @return $this
     */
    public function setWasteCodeId($waste_code_id)
    {
        $this->container['waste_code_id'] = $waste_code_id;

        return $this;
    }

    /**
     * Gets vehicle_reg_number
     *
     * @return string
     */
    public function getVehicleRegNumber()
    {
        return $this->container['vehicle_reg_number'];
    }

    /**
     * Sets vehicle_reg_number
     *
     * @param string $vehicle_reg_number Numer rejestracyjny środka transportu
     *
     * @return $this
     */
    public function setVehicleRegNumber($vehicle_reg_number)
    {
        $this->container['vehicle_reg_number'] = $vehicle_reg_number;

        return $this;
    }

    /**
     * Gets waste_mass
     *
     * @return double
     */
    public function getWasteMass()
    {
        return $this->container['waste_mass'];
    }

    /**
     * Sets waste_mass
     *
     * @param double $waste_mass Masa odpadów
     *
     * @return $this
     */
    public function setWasteMass($waste_mass)
    {
        $this->container['waste_mass'] = $waste_mass;

        return $this;
    }

    /**
     * Gets planned_transport_time
     *
     * @return \DateTime
     */
    public function getPlannedTransportTime()
    {
        return $this->container['planned_transport_time'];
    }

    /**
     * Sets planned_transport_time
     *
     * @param \DateTime $planned_transport_time Planowana data i godzina transportu
     *
     * @return $this
     */
    public function setPlannedTransportTime($planned_transport_time)
    {
        $this->container['planned_transport_time'] = $planned_transport_time;

        return $this;
    }

    /**
     * Gets card_approval_time
     *
     * @return \DateTime
     */
    public function getCardApprovalTime()
    {
        return $this->container['card_approval_time'];
    }

    /**
     * Sets card_approval_time
     *
     * @param \DateTime $card_approval_time Data zatwierdzenia karty
     *
     * @return $this
     */
    public function setCardApprovalTime($card_approval_time)
    {
        $this->container['card_approval_time'] = $card_approval_time;

        return $this;
    }

    /**
     * Gets approval_user
     *
     * @return string
     */
    public function getApprovalUser()
    {
        return $this->container['approval_user'];
    }

    /**
     * Sets approval_user
     *
     * @param string $approval_user Użytkownik zatwierdzający kartę
     *
     * @return $this
     */
    public function setApprovalUser($approval_user)
    {
        $this->container['approval_user'] = $approval_user;

        return $this;
    }

    /**
     * Gets real_transport_time
     *
     * @return \DateTime
     */
    public function getRealTransportTime()
    {
        return $this->container['real_transport_time'];
    }

    /**
     * Sets real_transport_time
     *
     * @param \DateTime $real_transport_time Rzeczywista data i godzina transportu
     *
     * @return $this
     */
    public function setRealTransportTime($real_transport_time)
    {
        $this->container['real_transport_time'] = $real_transport_time;

        return $this;
    }

    /**
     * Gets waste_process_id
     *
     * @return int
     */
    public function getWasteProcessId()
    {
        return $this->container['waste_process_id'];
    }

    /**
     * Sets waste_process_id
     *
     * @param int $waste_process_id Id procesu przetwarzania odpadów
     *
     * @return $this
     */
    public function setWasteProcessId($waste_process_id)
    {
        $this->container['waste_process_id'] = $waste_process_id;

        return $this;
    }

    /**
     * Gets certificate_number_and_box_numbers
     *
     * @return string
     */
    public function getCertificateNumberAndBoxNumbers()
    {
        return $this->container['certificate_number_and_box_numbers'];
    }

    /**
     * Sets certificate_number_and_box_numbers
     *
     * @param string $certificate_number_and_box_numbers Numer certyfikatu oraz numery pojemników
     *
     * @return $this
     */
    public function setCertificateNumberAndBoxNumbers($certificate_number_and_box_numbers)
    {
        $this->container['certificate_number_and_box_numbers'] = $certificate_number_and_box_numbers;

        return $this;
    }

    /**
     * Gets generating_confirmation_user
     *
     * @return string
     */
    public function getGeneratingConfirmationUser()
    {
        return $this->container['generating_confirmation_user'];
    }

    /**
     * Sets generating_confirmation_user
     *
     * @param string $generating_confirmation_user Użytkownik generujący potwierdzenie
     *
     * @return $this
     */
    public function setGeneratingConfirmationUser($generating_confirmation_user)
    {
        $this->container['generating_confirmation_user'] = $generating_confirmation_user;

        return $this;
    }

    /**
     * Gets generating_confirmation_time
     *
     * @return \DateTime
     */
    public function getGeneratingConfirmationTime()
    {
        return $this->container['generating_confirmation_time'];
    }

    /**
     * Sets generating_confirmation_time
     *
     * @param \DateTime $generating_confirmation_time Data wygenerowania potwierdzenia
     *
     * @return $this
     */
    public function setGeneratingConfirmationTime($generating_confirmation_time)
    {
        $this->container['generating_confirmation_time'] = $generating_confirmation_time;

        return $this;
    }

    /**
     * Gets card_status_code_name
     *
     * @return string
     */
    public function getCardStatusCodeName()
    {
        return $this->container['card_status_code_name'];
    }

    /**
     * Sets card_status_code_name
     *
     * @param string $card_status_code_name Oznaczenie kodowe statusu karty
     *
     * @return $this
     */
    public function setCardStatusCodeName($card_status_code_name)
    {
        $this->container['card_status_code_name'] = $card_status_code_name;

        return $this;
    }

    /**
     * Gets is_revised
     *
     * @return bool
     */
    public function getIsRevised()
    {
        return $this->container['is_revised'];
    }

    /**
     * Sets is_revised
     *
     * @param bool $is_revised Czy korygowana
     *
     * @return $this
     */
    public function setIsRevised($is_revised)
    {
        $this->container['is_revised'] = $is_revised;

        return $this;
    }

    /**
     * Gets revised_at
     *
     * @return \DateTime
     */
    public function getRevisedAt()
    {
        return $this->container['revised_at'];
    }

    /**
     * Sets revised_at
     *
     * @param \DateTime $revised_at Data wprowadzenia korekty
     *
     * @return $this
     */
    public function setRevisedAt($revised_at)
    {
        $this->container['revised_at'] = $revised_at;

        return $this;
    }

    /**
     * Gets revised_by
     *
     * @return string
     */
    public function getRevisedBy()
    {
        return $this->container['revised_by'];
    }

    /**
     * Sets revised_by
     *
     * @param string $revised_by Imię i Nazwisko osoby korygującej kartę
     *
     * @return $this
     */
    public function setRevisedBy($revised_by)
    {
        $this->container['revised_by'] = $revised_by;

        return $this;
    }

    /**
     * Gets revised_waste_mass
     *
     * @return double
     */
    public function getRevisedWasteMass()
    {
        return $this->container['revised_waste_mass'];
    }

    /**
     * Sets revised_waste_mass
     *
     * @param double $revised_waste_mass Skorygowana masa odpadów
     *
     * @return $this
     */
    public function setRevisedWasteMass($revised_waste_mass)
    {
        $this->container['revised_waste_mass'] = $revised_waste_mass;

        return $this;
    }

    /**
     * Gets revised_waste_code_id
     *
     * @return int
     */
    public function getRevisedWasteCodeId()
    {
        return $this->container['revised_waste_code_id'];
    }

    /**
     * Sets revised_waste_code_id
     *
     * @param int $revised_waste_code_id Skorygowany kod i rodzaj odpadów
     *
     * @return $this
     */
    public function setRevisedWasteCodeId($revised_waste_code_id)
    {
        $this->container['revised_waste_code_id'] = $revised_waste_code_id;

        return $this;
    }

    /**
     * Gets additional_info
     *
     * @return string
     */
    public function getAdditionalInfo()
    {
        return $this->container['additional_info'];
    }

    /**
     * Sets additional_info
     *
     * @param string $additional_info Informacje dodatkowe
     *
     * @return $this
     */
    public function setAdditionalInfo($additional_info)
    {
        $this->container['additional_info'] = $additional_info;

        return $this;
    }

    /**
     * Gets waste_code_extended
     *
     * @return bool
     */
    public function getWasteCodeExtended()
    {
        return $this->container['waste_code_extended'];
    }

    /**
     * Sets waste_code_extended
     *
     * @param bool $waste_code_extended Kod ex
     *
     * @return $this
     */
    public function setWasteCodeExtended($waste_code_extended)
    {
        $this->container['waste_code_extended'] = $waste_code_extended;

        return $this;
    }

    /**
     * Gets waste_code_extended_description
     *
     * @return string
     */
    public function getWasteCodeExtendedDescription()
    {
        return $this->container['waste_code_extended_description'];
    }

    /**
     * Sets waste_code_extended_description
     *
     * @param string $waste_code_extended_description Rodzaj odpadu ex
     *
     * @return $this
     */
    public function setWasteCodeExtendedDescription($waste_code_extended_description)
    {
        $this->container['waste_code_extended_description'] = $waste_code_extended_description;

        return $this;
    }

    /**
     * Gets hazardous_waste_reclassification
     *
     * @return bool
     */
    public function getHazardousWasteReclassification()
    {
        return $this->container['hazardous_waste_reclassification'];
    }

    /**
     * Sets hazardous_waste_reclassification
     *
     * @param bool $hazardous_waste_reclassification Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
     *
     * @return $this
     */
    public function setHazardousWasteReclassification($hazardous_waste_reclassification)
    {
        $this->container['hazardous_waste_reclassification'] = $hazardous_waste_reclassification;

        return $this;
    }

    /**
     * Gets hazardous_waste_reclassification_description
     *
     * @return string
     */
    public function getHazardousWasteReclassificationDescription()
    {
        return $this->container['hazardous_waste_reclassification_description'];
    }

    /**
     * Sets hazardous_waste_reclassification_description
     *
     * @param string $hazardous_waste_reclassification_description Rodzaj odpadu
     *
     * @return $this
     */
    public function setHazardousWasteReclassificationDescription($hazardous_waste_reclassification_description)
    {
        $this->container['hazardous_waste_reclassification_description'] = $hazardous_waste_reclassification_description;

        return $this;
    }

    /**
     * Gets is_waste_generating
     *
     * @return bool
     */
    public function getIsWasteGenerating()
    {
        return $this->container['is_waste_generating'];
    }

    /**
     * Sets is_waste_generating
     *
     * @param bool $is_waste_generating is_waste_generating
     *
     * @return $this
     */
    public function setIsWasteGenerating($is_waste_generating)
    {
        $this->container['is_waste_generating'] = $is_waste_generating;

        return $this;
    }

    /**
     * Gets waste_generated_teryt
     *
     * @return string
     */
    public function getWasteGeneratedTeryt()
    {
        return $this->container['waste_generated_teryt'];
    }

    /**
     * Sets waste_generated_teryt
     *
     * @param string $waste_generated_teryt waste_generated_teryt
     *
     * @return $this
     */
    public function setWasteGeneratedTeryt($waste_generated_teryt)
    {
        $this->container['waste_generated_teryt'] = $waste_generated_teryt;

        return $this;
    }

    /**
     * Gets waste_generating_additional_info
     *
     * @return string
     */
    public function getWasteGeneratingAdditionalInfo()
    {
        return $this->container['waste_generating_additional_info'];
    }

    /**
     * Sets waste_generating_additional_info
     *
     * @param string $waste_generating_additional_info waste_generating_additional_info
     *
     * @return $this
     */
    public function setWasteGeneratingAdditionalInfo($waste_generating_additional_info)
    {
        $this->container['waste_generating_additional_info'] = $waste_generating_additional_info;

        return $this;
    }

    /**
     * Gets waste_generated_teryt_pk
     *
     * @return string
     */
    public function getWasteGeneratedTerytPk()
    {
        return $this->container['waste_generated_teryt_pk'];
    }

    /**
     * Sets waste_generated_teryt_pk
     *
     * @param string $waste_generated_teryt_pk waste_generated_teryt_pk
     *
     * @return $this
     */
    public function setWasteGeneratedTerytPk($waste_generated_teryt_pk)
    {
        $this->container['waste_generated_teryt_pk'] = $waste_generated_teryt_pk;

        return $this;
    }

    /**
     * Gets rejected_by_user
     *
     * @return string
     */
    public function getRejectedByUser()
    {
        return $this->container['rejected_by_user'];
    }

    /**
     * Sets rejected_by_user
     *
     * @param string $rejected_by_user rejected_by_user
     *
     * @return $this
     */
    public function setRejectedByUser($rejected_by_user)
    {
        $this->container['rejected_by_user'] = $rejected_by_user;

        return $this;
    }

    /**
     * Gets card_rejection_time
     *
     * @return \DateTime
     */
    public function getCardRejectionTime()
    {
        return $this->container['card_rejection_time'];
    }

    /**
     * Sets card_rejection_time
     *
     * @param \DateTime $card_rejection_time card_rejection_time
     *
     * @return $this
     */
    public function setCardRejectionTime($card_rejection_time)
    {
        $this->container['card_rejection_time'] = $card_rejection_time;

        return $this;
    }

    /**
     * Gets remarks
     *
     * @return string
     */
    public function getRemarks()
    {
        return $this->container['remarks'];
    }

    /**
     * Sets remarks
     *
     * @param string $remarks remarks
     *
     * @return $this
     */
    public function setRemarks($remarks)
    {
        $this->container['remarks'] = $remarks;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


