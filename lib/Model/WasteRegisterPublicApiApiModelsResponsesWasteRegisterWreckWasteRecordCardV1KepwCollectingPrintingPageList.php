<?php
/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1KepwCollectingPrintingPageList
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1KepwCollectingPrintingPageList Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWreckWasteRecordCardV1KepwCollectingPrintingPageList implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'WasteRegisterPublic.Api.ApiModels.Responses.WasteRegister.WreckWasteRecordCard.V1.KepwCollectingPrintingPageList';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'date' => '\DateTime',
        'created_by_user' => 'string',
        'received_vehicle_mass' => 'double',
        'received_vehicles_count' => 'int',
        'received_kepw_card_number' => 'string',
        'transferred_vehicle_mass' => 'double',
        'transferred_vehicles_count' => 'int',
        'transferred_kepw_card_number' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'date' => 'date-time',
        'created_by_user' => null,
        'received_vehicle_mass' => 'double',
        'received_vehicles_count' => 'int32',
        'received_kepw_card_number' => null,
        'transferred_vehicle_mass' => 'double',
        'transferred_vehicles_count' => 'int32',
        'transferred_kepw_card_number' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'date' => 'date',
        'created_by_user' => 'createdByUser',
        'received_vehicle_mass' => 'receivedVehicleMass',
        'received_vehicles_count' => 'receivedVehiclesCount',
        'received_kepw_card_number' => 'receivedKepwCardNumber',
        'transferred_vehicle_mass' => 'transferredVehicleMass',
        'transferred_vehicles_count' => 'transferredVehiclesCount',
        'transferred_kepw_card_number' => 'transferredKepwCardNumber'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'date' => 'setDate',
        'created_by_user' => 'setCreatedByUser',
        'received_vehicle_mass' => 'setReceivedVehicleMass',
        'received_vehicles_count' => 'setReceivedVehiclesCount',
        'received_kepw_card_number' => 'setReceivedKepwCardNumber',
        'transferred_vehicle_mass' => 'setTransferredVehicleMass',
        'transferred_vehicles_count' => 'setTransferredVehiclesCount',
        'transferred_kepw_card_number' => 'setTransferredKepwCardNumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'date' => 'getDate',
        'created_by_user' => 'getCreatedByUser',
        'received_vehicle_mass' => 'getReceivedVehicleMass',
        'received_vehicles_count' => 'getReceivedVehiclesCount',
        'received_kepw_card_number' => 'getReceivedKepwCardNumber',
        'transferred_vehicle_mass' => 'getTransferredVehicleMass',
        'transferred_vehicles_count' => 'getTransferredVehiclesCount',
        'transferred_kepw_card_number' => 'getTransferredKepwCardNumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['created_by_user'] = isset($data['created_by_user']) ? $data['created_by_user'] : null;
        $this->container['received_vehicle_mass'] = isset($data['received_vehicle_mass']) ? $data['received_vehicle_mass'] : null;
        $this->container['received_vehicles_count'] = isset($data['received_vehicles_count']) ? $data['received_vehicles_count'] : null;
        $this->container['received_kepw_card_number'] = isset($data['received_kepw_card_number']) ? $data['received_kepw_card_number'] : null;
        $this->container['transferred_vehicle_mass'] = isset($data['transferred_vehicle_mass']) ? $data['transferred_vehicle_mass'] : null;
        $this->container['transferred_vehicles_count'] = isset($data['transferred_vehicles_count']) ? $data['transferred_vehicles_count'] : null;
        $this->container['transferred_kepw_card_number'] = isset($data['transferred_kepw_card_number']) ? $data['transferred_kepw_card_number'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \DateTime $date Data
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets created_by_user
     *
     * @return string
     */
    public function getCreatedByUser()
    {
        return $this->container['created_by_user'];
    }

    /**
     * Sets created_by_user
     *
     * @param string $created_by_user Utworzone przez użytkownika
     *
     * @return $this
     */
    public function setCreatedByUser($created_by_user)
    {
        $this->container['created_by_user'] = $created_by_user;

        return $this;
    }

    /**
     * Gets received_vehicle_mass
     *
     * @return double
     */
    public function getReceivedVehicleMass()
    {
        return $this->container['received_vehicle_mass'];
    }

    /**
     * Sets received_vehicle_mass
     *
     * @param double $received_vehicle_mass Masa przyjętych pojazdów [Mg]
     *
     * @return $this
     */
    public function setReceivedVehicleMass($received_vehicle_mass)
    {
        $this->container['received_vehicle_mass'] = $received_vehicle_mass;

        return $this;
    }

    /**
     * Gets received_vehicles_count
     *
     * @return int
     */
    public function getReceivedVehiclesCount()
    {
        return $this->container['received_vehicles_count'];
    }

    /**
     * Sets received_vehicles_count
     *
     * @param int $received_vehicles_count Liczba przyjętych pojazdów [szt.]
     *
     * @return $this
     */
    public function setReceivedVehiclesCount($received_vehicles_count)
    {
        $this->container['received_vehicles_count'] = $received_vehicles_count;

        return $this;
    }

    /**
     * Gets received_kepw_card_number
     *
     * @return string
     */
    public function getReceivedKepwCardNumber()
    {
        return $this->container['received_kepw_card_number'];
    }

    /**
     * Sets received_kepw_card_number
     *
     * @param string $received_kepw_card_number Przyjęte - Numer karty przekazania odpadów
     *
     * @return $this
     */
    public function setReceivedKepwCardNumber($received_kepw_card_number)
    {
        $this->container['received_kepw_card_number'] = $received_kepw_card_number;

        return $this;
    }

    /**
     * Gets transferred_vehicle_mass
     *
     * @return double
     */
    public function getTransferredVehicleMass()
    {
        return $this->container['transferred_vehicle_mass'];
    }

    /**
     * Sets transferred_vehicle_mass
     *
     * @param double $transferred_vehicle_mass Masa przekazanych pojazdów [Mg]
     *
     * @return $this
     */
    public function setTransferredVehicleMass($transferred_vehicle_mass)
    {
        $this->container['transferred_vehicle_mass'] = $transferred_vehicle_mass;

        return $this;
    }

    /**
     * Gets transferred_vehicles_count
     *
     * @return int
     */
    public function getTransferredVehiclesCount()
    {
        return $this->container['transferred_vehicles_count'];
    }

    /**
     * Sets transferred_vehicles_count
     *
     * @param int $transferred_vehicles_count Liczba przekazanych pojazdów [szt.]
     *
     * @return $this
     */
    public function setTransferredVehiclesCount($transferred_vehicles_count)
    {
        $this->container['transferred_vehicles_count'] = $transferred_vehicles_count;

        return $this;
    }

    /**
     * Gets transferred_kepw_card_number
     *
     * @return string
     */
    public function getTransferredKepwCardNumber()
    {
        return $this->container['transferred_kepw_card_number'];
    }

    /**
     * Sets transferred_kepw_card_number
     *
     * @param string $transferred_kepw_card_number Przekazane - Numer karty przekazania odpadów
     *
     * @return $this
     */
    public function setTransferredKepwCardNumber($transferred_kepw_card_number)
    {
        $this->container['transferred_kepw_card_number'] = $transferred_kepw_card_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


