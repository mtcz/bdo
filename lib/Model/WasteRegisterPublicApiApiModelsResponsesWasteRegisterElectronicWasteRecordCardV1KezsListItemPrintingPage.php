<?php
/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WasteRegisterPublicApiApiModelsResponsesWasteRegisterElectronicWasteRecordCardV1KezsListItemPrintingPage implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'WasteRegisterPublic.Api.ApiModels.Responses.WasteRegister.ElectronicWasteRecordCard.V1.KezsListItemPrintingPage';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'date' => '\DateTime',
        'full_name' => 'string',
        'collected_from_user_card_number' => 'string',
        'collected_from_user_mass' => 'double',
        'collected_from_other_user_card_number' => 'string',
        'collected_from_other_user_mass' => 'double',
        'management_card_number' => 'string',
        'management_handed_over_mass' => 'double',
        'management_used_equipment_mass' => 'double',
        'management_recycled_equipment_mass' => 'double',
        'recycled_parts_equipment_mass' => 'double',
        'used_equipment_mass' => 'double',
        'used_equipment_code_and_kind_of_waste' => 'string',
        'on_ones_own_recycled_waste_mass' => 'double',
        'on_ones_own_rd' => 'string',
        'on_ones_own_is_recycling' => 'bool',
        'handed_over_mass' => 'double',
        'handed_over_card_number_or_code_and_kind_of_waste' => 'string',
        'waste_code_extended' => 'bool',
        'waste_code_extended_description' => 'string',
        'hazardous_waste_reclassification' => 'bool',
        'hazardous_waste_reclassification_description' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'date' => 'date-time',
        'full_name' => null,
        'collected_from_user_card_number' => null,
        'collected_from_user_mass' => 'double',
        'collected_from_other_user_card_number' => null,
        'collected_from_other_user_mass' => 'double',
        'management_card_number' => null,
        'management_handed_over_mass' => 'double',
        'management_used_equipment_mass' => 'double',
        'management_recycled_equipment_mass' => 'double',
        'recycled_parts_equipment_mass' => 'double',
        'used_equipment_mass' => 'double',
        'used_equipment_code_and_kind_of_waste' => null,
        'on_ones_own_recycled_waste_mass' => 'double',
        'on_ones_own_rd' => null,
        'on_ones_own_is_recycling' => null,
        'handed_over_mass' => 'double',
        'handed_over_card_number_or_code_and_kind_of_waste' => null,
        'waste_code_extended' => null,
        'waste_code_extended_description' => null,
        'hazardous_waste_reclassification' => null,
        'hazardous_waste_reclassification_description' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'date' => 'date',
        'full_name' => 'fullName',
        'collected_from_user_card_number' => 'collectedFromUserCardNumber',
        'collected_from_user_mass' => 'collectedFromUserMass',
        'collected_from_other_user_card_number' => 'collectedFromOtherUserCardNumber',
        'collected_from_other_user_mass' => 'collectedFromOtherUserMass',
        'management_card_number' => 'managementCardNumber',
        'management_handed_over_mass' => 'managementHandedOverMass',
        'management_used_equipment_mass' => 'managementUsedEquipmentMass',
        'management_recycled_equipment_mass' => 'managementRecycledEquipmentMass',
        'recycled_parts_equipment_mass' => 'recycledPartsEquipmentMass',
        'used_equipment_mass' => 'usedEquipmentMass',
        'used_equipment_code_and_kind_of_waste' => 'usedEquipmentCodeAndKindOfWaste',
        'on_ones_own_recycled_waste_mass' => 'onOnesOwnRecycledWasteMass',
        'on_ones_own_rd' => 'onOnesOwnRD',
        'on_ones_own_is_recycling' => 'onOnesOwnIsRecycling',
        'handed_over_mass' => 'handedOverMass',
        'handed_over_card_number_or_code_and_kind_of_waste' => 'handedOverCardNumberOrCodeAndKindOfWaste',
        'waste_code_extended' => 'wasteCodeExtended',
        'waste_code_extended_description' => 'wasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'hazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'hazardousWasteReclassificationDescription'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'date' => 'setDate',
        'full_name' => 'setFullName',
        'collected_from_user_card_number' => 'setCollectedFromUserCardNumber',
        'collected_from_user_mass' => 'setCollectedFromUserMass',
        'collected_from_other_user_card_number' => 'setCollectedFromOtherUserCardNumber',
        'collected_from_other_user_mass' => 'setCollectedFromOtherUserMass',
        'management_card_number' => 'setManagementCardNumber',
        'management_handed_over_mass' => 'setManagementHandedOverMass',
        'management_used_equipment_mass' => 'setManagementUsedEquipmentMass',
        'management_recycled_equipment_mass' => 'setManagementRecycledEquipmentMass',
        'recycled_parts_equipment_mass' => 'setRecycledPartsEquipmentMass',
        'used_equipment_mass' => 'setUsedEquipmentMass',
        'used_equipment_code_and_kind_of_waste' => 'setUsedEquipmentCodeAndKindOfWaste',
        'on_ones_own_recycled_waste_mass' => 'setOnOnesOwnRecycledWasteMass',
        'on_ones_own_rd' => 'setOnOnesOwnRd',
        'on_ones_own_is_recycling' => 'setOnOnesOwnIsRecycling',
        'handed_over_mass' => 'setHandedOverMass',
        'handed_over_card_number_or_code_and_kind_of_waste' => 'setHandedOverCardNumberOrCodeAndKindOfWaste',
        'waste_code_extended' => 'setWasteCodeExtended',
        'waste_code_extended_description' => 'setWasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'setHazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'setHazardousWasteReclassificationDescription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'date' => 'getDate',
        'full_name' => 'getFullName',
        'collected_from_user_card_number' => 'getCollectedFromUserCardNumber',
        'collected_from_user_mass' => 'getCollectedFromUserMass',
        'collected_from_other_user_card_number' => 'getCollectedFromOtherUserCardNumber',
        'collected_from_other_user_mass' => 'getCollectedFromOtherUserMass',
        'management_card_number' => 'getManagementCardNumber',
        'management_handed_over_mass' => 'getManagementHandedOverMass',
        'management_used_equipment_mass' => 'getManagementUsedEquipmentMass',
        'management_recycled_equipment_mass' => 'getManagementRecycledEquipmentMass',
        'recycled_parts_equipment_mass' => 'getRecycledPartsEquipmentMass',
        'used_equipment_mass' => 'getUsedEquipmentMass',
        'used_equipment_code_and_kind_of_waste' => 'getUsedEquipmentCodeAndKindOfWaste',
        'on_ones_own_recycled_waste_mass' => 'getOnOnesOwnRecycledWasteMass',
        'on_ones_own_rd' => 'getOnOnesOwnRd',
        'on_ones_own_is_recycling' => 'getOnOnesOwnIsRecycling',
        'handed_over_mass' => 'getHandedOverMass',
        'handed_over_card_number_or_code_and_kind_of_waste' => 'getHandedOverCardNumberOrCodeAndKindOfWaste',
        'waste_code_extended' => 'getWasteCodeExtended',
        'waste_code_extended_description' => 'getWasteCodeExtendedDescription',
        'hazardous_waste_reclassification' => 'getHazardousWasteReclassification',
        'hazardous_waste_reclassification_description' => 'getHazardousWasteReclassificationDescription'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['full_name'] = isset($data['full_name']) ? $data['full_name'] : null;
        $this->container['collected_from_user_card_number'] = isset($data['collected_from_user_card_number']) ? $data['collected_from_user_card_number'] : null;
        $this->container['collected_from_user_mass'] = isset($data['collected_from_user_mass']) ? $data['collected_from_user_mass'] : null;
        $this->container['collected_from_other_user_card_number'] = isset($data['collected_from_other_user_card_number']) ? $data['collected_from_other_user_card_number'] : null;
        $this->container['collected_from_other_user_mass'] = isset($data['collected_from_other_user_mass']) ? $data['collected_from_other_user_mass'] : null;
        $this->container['management_card_number'] = isset($data['management_card_number']) ? $data['management_card_number'] : null;
        $this->container['management_handed_over_mass'] = isset($data['management_handed_over_mass']) ? $data['management_handed_over_mass'] : null;
        $this->container['management_used_equipment_mass'] = isset($data['management_used_equipment_mass']) ? $data['management_used_equipment_mass'] : null;
        $this->container['management_recycled_equipment_mass'] = isset($data['management_recycled_equipment_mass']) ? $data['management_recycled_equipment_mass'] : null;
        $this->container['recycled_parts_equipment_mass'] = isset($data['recycled_parts_equipment_mass']) ? $data['recycled_parts_equipment_mass'] : null;
        $this->container['used_equipment_mass'] = isset($data['used_equipment_mass']) ? $data['used_equipment_mass'] : null;
        $this->container['used_equipment_code_and_kind_of_waste'] = isset($data['used_equipment_code_and_kind_of_waste']) ? $data['used_equipment_code_and_kind_of_waste'] : null;
        $this->container['on_ones_own_recycled_waste_mass'] = isset($data['on_ones_own_recycled_waste_mass']) ? $data['on_ones_own_recycled_waste_mass'] : null;
        $this->container['on_ones_own_rd'] = isset($data['on_ones_own_rd']) ? $data['on_ones_own_rd'] : null;
        $this->container['on_ones_own_is_recycling'] = isset($data['on_ones_own_is_recycling']) ? $data['on_ones_own_is_recycling'] : null;
        $this->container['handed_over_mass'] = isset($data['handed_over_mass']) ? $data['handed_over_mass'] : null;
        $this->container['handed_over_card_number_or_code_and_kind_of_waste'] = isset($data['handed_over_card_number_or_code_and_kind_of_waste']) ? $data['handed_over_card_number_or_code_and_kind_of_waste'] : null;
        $this->container['waste_code_extended'] = isset($data['waste_code_extended']) ? $data['waste_code_extended'] : null;
        $this->container['waste_code_extended_description'] = isset($data['waste_code_extended_description']) ? $data['waste_code_extended_description'] : null;
        $this->container['hazardous_waste_reclassification'] = isset($data['hazardous_waste_reclassification']) ? $data['hazardous_waste_reclassification'] : null;
        $this->container['hazardous_waste_reclassification_description'] = isset($data['hazardous_waste_reclassification_description']) ? $data['hazardous_waste_reclassification_description'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \DateTime $date Data
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets full_name
     *
     * @return string
     */
    public function getFullName()
    {
        return $this->container['full_name'];
    }

    /**
     * Sets full_name
     *
     * @param string $full_name 
     *
     * @return $this
     */
    public function setFullName($full_name)
    {
        $this->container['full_name'] = $full_name;

        return $this;
    }

    /**
     * Gets collected_from_user_card_number
     *
     * @return string
     */
    public function getCollectedFromUserCardNumber()
    {
        return $this->container['collected_from_user_card_number'];
    }

    /**
     * Sets collected_from_user_card_number
     *
     * @param string $collected_from_user_card_number 
     *
     * @return $this
     */
    public function setCollectedFromUserCardNumber($collected_from_user_card_number)
    {
        $this->container['collected_from_user_card_number'] = $collected_from_user_card_number;

        return $this;
    }

    /**
     * Gets collected_from_user_mass
     *
     * @return double
     */
    public function getCollectedFromUserMass()
    {
        return $this->container['collected_from_user_mass'];
    }

    /**
     * Sets collected_from_user_mass
     *
     * @param double $collected_from_user_mass 
     *
     * @return $this
     */
    public function setCollectedFromUserMass($collected_from_user_mass)
    {
        $this->container['collected_from_user_mass'] = $collected_from_user_mass;

        return $this;
    }

    /**
     * Gets collected_from_other_user_card_number
     *
     * @return string
     */
    public function getCollectedFromOtherUserCardNumber()
    {
        return $this->container['collected_from_other_user_card_number'];
    }

    /**
     * Sets collected_from_other_user_card_number
     *
     * @param string $collected_from_other_user_card_number 
     *
     * @return $this
     */
    public function setCollectedFromOtherUserCardNumber($collected_from_other_user_card_number)
    {
        $this->container['collected_from_other_user_card_number'] = $collected_from_other_user_card_number;

        return $this;
    }

    /**
     * Gets collected_from_other_user_mass
     *
     * @return double
     */
    public function getCollectedFromOtherUserMass()
    {
        return $this->container['collected_from_other_user_mass'];
    }

    /**
     * Sets collected_from_other_user_mass
     *
     * @param double $collected_from_other_user_mass 
     *
     * @return $this
     */
    public function setCollectedFromOtherUserMass($collected_from_other_user_mass)
    {
        $this->container['collected_from_other_user_mass'] = $collected_from_other_user_mass;

        return $this;
    }

    /**
     * Gets management_card_number
     *
     * @return string
     */
    public function getManagementCardNumber()
    {
        return $this->container['management_card_number'];
    }

    /**
     * Sets management_card_number
     *
     * @param string $management_card_number 
     *
     * @return $this
     */
    public function setManagementCardNumber($management_card_number)
    {
        $this->container['management_card_number'] = $management_card_number;

        return $this;
    }

    /**
     * Gets management_handed_over_mass
     *
     * @return double
     */
    public function getManagementHandedOverMass()
    {
        return $this->container['management_handed_over_mass'];
    }

    /**
     * Sets management_handed_over_mass
     *
     * @param double $management_handed_over_mass 
     *
     * @return $this
     */
    public function setManagementHandedOverMass($management_handed_over_mass)
    {
        $this->container['management_handed_over_mass'] = $management_handed_over_mass;

        return $this;
    }

    /**
     * Gets management_used_equipment_mass
     *
     * @return double
     */
    public function getManagementUsedEquipmentMass()
    {
        return $this->container['management_used_equipment_mass'];
    }

    /**
     * Sets management_used_equipment_mass
     *
     * @param double $management_used_equipment_mass 
     *
     * @return $this
     */
    public function setManagementUsedEquipmentMass($management_used_equipment_mass)
    {
        $this->container['management_used_equipment_mass'] = $management_used_equipment_mass;

        return $this;
    }

    /**
     * Gets management_recycled_equipment_mass
     *
     * @return double
     */
    public function getManagementRecycledEquipmentMass()
    {
        return $this->container['management_recycled_equipment_mass'];
    }

    /**
     * Sets management_recycled_equipment_mass
     *
     * @param double $management_recycled_equipment_mass 
     *
     * @return $this
     */
    public function setManagementRecycledEquipmentMass($management_recycled_equipment_mass)
    {
        $this->container['management_recycled_equipment_mass'] = $management_recycled_equipment_mass;

        return $this;
    }

    /**
     * Gets recycled_parts_equipment_mass
     *
     * @return double
     */
    public function getRecycledPartsEquipmentMass()
    {
        return $this->container['recycled_parts_equipment_mass'];
    }

    /**
     * Sets recycled_parts_equipment_mass
     *
     * @param double $recycled_parts_equipment_mass Masa zużytego sprzętu przeznaczonego do ponownego użycia
     *
     * @return $this
     */
    public function setRecycledPartsEquipmentMass($recycled_parts_equipment_mass)
    {
        $this->container['recycled_parts_equipment_mass'] = $recycled_parts_equipment_mass;

        return $this;
    }

    /**
     * Gets used_equipment_mass
     *
     * @return double
     */
    public function getUsedEquipmentMass()
    {
        return $this->container['used_equipment_mass'];
    }

    /**
     * Sets used_equipment_mass
     *
     * @param double $used_equipment_mass Masa przetwarzanego sprzętu
     *
     * @return $this
     */
    public function setUsedEquipmentMass($used_equipment_mass)
    {
        $this->container['used_equipment_mass'] = $used_equipment_mass;

        return $this;
    }

    /**
     * Gets used_equipment_code_and_kind_of_waste
     *
     * @return string
     */
    public function getUsedEquipmentCodeAndKindOfWaste()
    {
        return $this->container['used_equipment_code_and_kind_of_waste'];
    }

    /**
     * Sets used_equipment_code_and_kind_of_waste
     *
     * @param string $used_equipment_code_and_kind_of_waste 
     *
     * @return $this
     */
    public function setUsedEquipmentCodeAndKindOfWaste($used_equipment_code_and_kind_of_waste)
    {
        $this->container['used_equipment_code_and_kind_of_waste'] = $used_equipment_code_and_kind_of_waste;

        return $this;
    }

    /**
     * Gets on_ones_own_recycled_waste_mass
     *
     * @return double
     */
    public function getOnOnesOwnRecycledWasteMass()
    {
        return $this->container['on_ones_own_recycled_waste_mass'];
    }

    /**
     * Sets on_ones_own_recycled_waste_mass
     *
     * @param double $on_ones_own_recycled_waste_mass 
     *
     * @return $this
     */
    public function setOnOnesOwnRecycledWasteMass($on_ones_own_recycled_waste_mass)
    {
        $this->container['on_ones_own_recycled_waste_mass'] = $on_ones_own_recycled_waste_mass;

        return $this;
    }

    /**
     * Gets on_ones_own_rd
     *
     * @return string
     */
    public function getOnOnesOwnRd()
    {
        return $this->container['on_ones_own_rd'];
    }

    /**
     * Sets on_ones_own_rd
     *
     * @param string $on_ones_own_rd 
     *
     * @return $this
     */
    public function setOnOnesOwnRd($on_ones_own_rd)
    {
        $this->container['on_ones_own_rd'] = $on_ones_own_rd;

        return $this;
    }

    /**
     * Gets on_ones_own_is_recycling
     *
     * @return bool
     */
    public function getOnOnesOwnIsRecycling()
    {
        return $this->container['on_ones_own_is_recycling'];
    }

    /**
     * Sets on_ones_own_is_recycling
     *
     * @param bool $on_ones_own_is_recycling 
     *
     * @return $this
     */
    public function setOnOnesOwnIsRecycling($on_ones_own_is_recycling)
    {
        $this->container['on_ones_own_is_recycling'] = $on_ones_own_is_recycling;

        return $this;
    }

    /**
     * Gets handed_over_mass
     *
     * @return double
     */
    public function getHandedOverMass()
    {
        return $this->container['handed_over_mass'];
    }

    /**
     * Sets handed_over_mass
     *
     * @param double $handed_over_mass 
     *
     * @return $this
     */
    public function setHandedOverMass($handed_over_mass)
    {
        $this->container['handed_over_mass'] = $handed_over_mass;

        return $this;
    }

    /**
     * Gets handed_over_card_number_or_code_and_kind_of_waste
     *
     * @return string
     */
    public function getHandedOverCardNumberOrCodeAndKindOfWaste()
    {
        return $this->container['handed_over_card_number_or_code_and_kind_of_waste'];
    }

    /**
     * Sets handed_over_card_number_or_code_and_kind_of_waste
     *
     * @param string $handed_over_card_number_or_code_and_kind_of_waste 
     *
     * @return $this
     */
    public function setHandedOverCardNumberOrCodeAndKindOfWaste($handed_over_card_number_or_code_and_kind_of_waste)
    {
        $this->container['handed_over_card_number_or_code_and_kind_of_waste'] = $handed_over_card_number_or_code_and_kind_of_waste;

        return $this;
    }

    /**
     * Gets waste_code_extended
     *
     * @return bool
     */
    public function getWasteCodeExtended()
    {
        return $this->container['waste_code_extended'];
    }

    /**
     * Sets waste_code_extended
     *
     * @param bool $waste_code_extended Kod ex
     *
     * @return $this
     */
    public function setWasteCodeExtended($waste_code_extended)
    {
        $this->container['waste_code_extended'] = $waste_code_extended;

        return $this;
    }

    /**
     * Gets waste_code_extended_description
     *
     * @return string
     */
    public function getWasteCodeExtendedDescription()
    {
        return $this->container['waste_code_extended_description'];
    }

    /**
     * Sets waste_code_extended_description
     *
     * @param string $waste_code_extended_description Rodzaj odpadu ex
     *
     * @return $this
     */
    public function setWasteCodeExtendedDescription($waste_code_extended_description)
    {
        $this->container['waste_code_extended_description'] = $waste_code_extended_description;

        return $this;
    }

    /**
     * Gets hazardous_waste_reclassification
     *
     * @return bool
     */
    public function getHazardousWasteReclassification()
    {
        return $this->container['hazardous_waste_reclassification'];
    }

    /**
     * Sets hazardous_waste_reclassification
     *
     * @param bool $hazardous_waste_reclassification Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
     *
     * @return $this
     */
    public function setHazardousWasteReclassification($hazardous_waste_reclassification)
    {
        $this->container['hazardous_waste_reclassification'] = $hazardous_waste_reclassification;

        return $this;
    }

    /**
     * Gets hazardous_waste_reclassification_description
     *
     * @return string
     */
    public function getHazardousWasteReclassificationDescription()
    {
        return $this->container['hazardous_waste_reclassification_description'];
    }

    /**
     * Sets hazardous_waste_reclassification_description
     *
     * @param string $hazardous_waste_reclassification_description Rodzaj odpadu
     *
     * @return $this
     */
    public function setHazardousWasteReclassificationDescription($hazardous_waste_reclassification_description)
    {
        $this->container['hazardous_waste_reclassification_description'] = $hazardous_waste_reclassification_description;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


