<?php
/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsReceiverSearchResultDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * v1 Waste Register public Api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsReceiverSearchResultDto Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WasteRegisterPublicApiApiModelsResponsesWasteRegisterWasteTransferCardV1KpoAsReceiverSearchResultDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'WasteRegisterPublic.Api.ApiModels.Responses.WasteRegister.WasteTransferCard.V1.KpoAsReceiverSearchResultDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'planned_transport_time' => '\DateTime',
        'real_transport_time' => '\DateTime',
        'waste_code' => 'string',
        'waste_code_description' => 'string',
        'vehicle_reg_number' => 'string',
        'card_status' => 'string',
        'card_number' => 'string',
        'card_status_code_name' => 'string',
        'sender_name' => 'string',
        'receiver_name' => 'string',
        'kpo_id' => 'string',
        'kpo_last_modified_at' => '\DateTime',
        'sender_first_name_and_last_name' => 'string',
        'receiver_first_and_last_name' => 'string',
        'revision_number' => 'int',
        'card_rejection_time' => '\DateTime',
        'rejected_by_user_first_name_and_last_name' => 'string',
        'receive_confirmation_time' => '\DateTime',
        'waste_code_extended' => 'bool',
        'hazardous_waste_reclassification' => 'bool',
        'waste_code_extended_description' => 'string',
        'hazardous_waste_reclassification_description' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'planned_transport_time' => 'date-time',
        'real_transport_time' => 'date-time',
        'waste_code' => null,
        'waste_code_description' => null,
        'vehicle_reg_number' => null,
        'card_status' => null,
        'card_number' => null,
        'card_status_code_name' => null,
        'sender_name' => null,
        'receiver_name' => null,
        'kpo_id' => 'uuid',
        'kpo_last_modified_at' => 'date-time',
        'sender_first_name_and_last_name' => null,
        'receiver_first_and_last_name' => null,
        'revision_number' => 'int32',
        'card_rejection_time' => 'date-time',
        'rejected_by_user_first_name_and_last_name' => null,
        'receive_confirmation_time' => 'date-time',
        'waste_code_extended' => null,
        'hazardous_waste_reclassification' => null,
        'waste_code_extended_description' => null,
        'hazardous_waste_reclassification_description' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'planned_transport_time' => 'plannedTransportTime',
        'real_transport_time' => 'realTransportTime',
        'waste_code' => 'wasteCode',
        'waste_code_description' => 'wasteCodeDescription',
        'vehicle_reg_number' => 'vehicleRegNumber',
        'card_status' => 'cardStatus',
        'card_number' => 'cardNumber',
        'card_status_code_name' => 'cardStatusCodeName',
        'sender_name' => 'senderName',
        'receiver_name' => 'receiverName',
        'kpo_id' => 'kpoId',
        'kpo_last_modified_at' => 'kpoLastModifiedAt',
        'sender_first_name_and_last_name' => 'senderFirstNameAndLastName',
        'receiver_first_and_last_name' => 'receiverFirstAndLastName',
        'revision_number' => 'revisionNumber',
        'card_rejection_time' => 'cardRejectionTime',
        'rejected_by_user_first_name_and_last_name' => 'rejectedByUserFirstNameAndLastName',
        'receive_confirmation_time' => 'receiveConfirmationTime',
        'waste_code_extended' => 'wasteCodeExtended',
        'hazardous_waste_reclassification' => 'hazardousWasteReclassification',
        'waste_code_extended_description' => 'wasteCodeExtendedDescription',
        'hazardous_waste_reclassification_description' => 'hazardousWasteReclassificationDescription'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'planned_transport_time' => 'setPlannedTransportTime',
        'real_transport_time' => 'setRealTransportTime',
        'waste_code' => 'setWasteCode',
        'waste_code_description' => 'setWasteCodeDescription',
        'vehicle_reg_number' => 'setVehicleRegNumber',
        'card_status' => 'setCardStatus',
        'card_number' => 'setCardNumber',
        'card_status_code_name' => 'setCardStatusCodeName',
        'sender_name' => 'setSenderName',
        'receiver_name' => 'setReceiverName',
        'kpo_id' => 'setKpoId',
        'kpo_last_modified_at' => 'setKpoLastModifiedAt',
        'sender_first_name_and_last_name' => 'setSenderFirstNameAndLastName',
        'receiver_first_and_last_name' => 'setReceiverFirstAndLastName',
        'revision_number' => 'setRevisionNumber',
        'card_rejection_time' => 'setCardRejectionTime',
        'rejected_by_user_first_name_and_last_name' => 'setRejectedByUserFirstNameAndLastName',
        'receive_confirmation_time' => 'setReceiveConfirmationTime',
        'waste_code_extended' => 'setWasteCodeExtended',
        'hazardous_waste_reclassification' => 'setHazardousWasteReclassification',
        'waste_code_extended_description' => 'setWasteCodeExtendedDescription',
        'hazardous_waste_reclassification_description' => 'setHazardousWasteReclassificationDescription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'planned_transport_time' => 'getPlannedTransportTime',
        'real_transport_time' => 'getRealTransportTime',
        'waste_code' => 'getWasteCode',
        'waste_code_description' => 'getWasteCodeDescription',
        'vehicle_reg_number' => 'getVehicleRegNumber',
        'card_status' => 'getCardStatus',
        'card_number' => 'getCardNumber',
        'card_status_code_name' => 'getCardStatusCodeName',
        'sender_name' => 'getSenderName',
        'receiver_name' => 'getReceiverName',
        'kpo_id' => 'getKpoId',
        'kpo_last_modified_at' => 'getKpoLastModifiedAt',
        'sender_first_name_and_last_name' => 'getSenderFirstNameAndLastName',
        'receiver_first_and_last_name' => 'getReceiverFirstAndLastName',
        'revision_number' => 'getRevisionNumber',
        'card_rejection_time' => 'getCardRejectionTime',
        'rejected_by_user_first_name_and_last_name' => 'getRejectedByUserFirstNameAndLastName',
        'receive_confirmation_time' => 'getReceiveConfirmationTime',
        'waste_code_extended' => 'getWasteCodeExtended',
        'hazardous_waste_reclassification' => 'getHazardousWasteReclassification',
        'waste_code_extended_description' => 'getWasteCodeExtendedDescription',
        'hazardous_waste_reclassification_description' => 'getHazardousWasteReclassificationDescription'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['planned_transport_time'] = isset($data['planned_transport_time']) ? $data['planned_transport_time'] : null;
        $this->container['real_transport_time'] = isset($data['real_transport_time']) ? $data['real_transport_time'] : null;
        $this->container['waste_code'] = isset($data['waste_code']) ? $data['waste_code'] : null;
        $this->container['waste_code_description'] = isset($data['waste_code_description']) ? $data['waste_code_description'] : null;
        $this->container['vehicle_reg_number'] = isset($data['vehicle_reg_number']) ? $data['vehicle_reg_number'] : null;
        $this->container['card_status'] = isset($data['card_status']) ? $data['card_status'] : null;
        $this->container['card_number'] = isset($data['card_number']) ? $data['card_number'] : null;
        $this->container['card_status_code_name'] = isset($data['card_status_code_name']) ? $data['card_status_code_name'] : null;
        $this->container['sender_name'] = isset($data['sender_name']) ? $data['sender_name'] : null;
        $this->container['receiver_name'] = isset($data['receiver_name']) ? $data['receiver_name'] : null;
        $this->container['kpo_id'] = isset($data['kpo_id']) ? $data['kpo_id'] : null;
        $this->container['kpo_last_modified_at'] = isset($data['kpo_last_modified_at']) ? $data['kpo_last_modified_at'] : null;
        $this->container['sender_first_name_and_last_name'] = isset($data['sender_first_name_and_last_name']) ? $data['sender_first_name_and_last_name'] : null;
        $this->container['receiver_first_and_last_name'] = isset($data['receiver_first_and_last_name']) ? $data['receiver_first_and_last_name'] : null;
        $this->container['revision_number'] = isset($data['revision_number']) ? $data['revision_number'] : null;
        $this->container['card_rejection_time'] = isset($data['card_rejection_time']) ? $data['card_rejection_time'] : null;
        $this->container['rejected_by_user_first_name_and_last_name'] = isset($data['rejected_by_user_first_name_and_last_name']) ? $data['rejected_by_user_first_name_and_last_name'] : null;
        $this->container['receive_confirmation_time'] = isset($data['receive_confirmation_time']) ? $data['receive_confirmation_time'] : null;
        $this->container['waste_code_extended'] = isset($data['waste_code_extended']) ? $data['waste_code_extended'] : null;
        $this->container['hazardous_waste_reclassification'] = isset($data['hazardous_waste_reclassification']) ? $data['hazardous_waste_reclassification'] : null;
        $this->container['waste_code_extended_description'] = isset($data['waste_code_extended_description']) ? $data['waste_code_extended_description'] : null;
        $this->container['hazardous_waste_reclassification_description'] = isset($data['hazardous_waste_reclassification_description']) ? $data['hazardous_waste_reclassification_description'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets planned_transport_time
     *
     * @return \DateTime
     */
    public function getPlannedTransportTime()
    {
        return $this->container['planned_transport_time'];
    }

    /**
     * Sets planned_transport_time
     *
     * @param \DateTime $planned_transport_time Planowana data i godzina transportu
     *
     * @return $this
     */
    public function setPlannedTransportTime($planned_transport_time)
    {
        $this->container['planned_transport_time'] = $planned_transport_time;

        return $this;
    }

    /**
     * Gets real_transport_time
     *
     * @return \DateTime
     */
    public function getRealTransportTime()
    {
        return $this->container['real_transport_time'];
    }

    /**
     * Sets real_transport_time
     *
     * @param \DateTime $real_transport_time Rzeczywista data i godzina transportu
     *
     * @return $this
     */
    public function setRealTransportTime($real_transport_time)
    {
        $this->container['real_transport_time'] = $real_transport_time;

        return $this;
    }

    /**
     * Gets waste_code
     *
     * @return string
     */
    public function getWasteCode()
    {
        return $this->container['waste_code'];
    }

    /**
     * Sets waste_code
     *
     * @param string $waste_code Kod odpadu
     *
     * @return $this
     */
    public function setWasteCode($waste_code)
    {
        $this->container['waste_code'] = $waste_code;

        return $this;
    }

    /**
     * Gets waste_code_description
     *
     * @return string
     */
    public function getWasteCodeDescription()
    {
        return $this->container['waste_code_description'];
    }

    /**
     * Sets waste_code_description
     *
     * @param string $waste_code_description Opis kodu odpadu
     *
     * @return $this
     */
    public function setWasteCodeDescription($waste_code_description)
    {
        $this->container['waste_code_description'] = $waste_code_description;

        return $this;
    }

    /**
     * Gets vehicle_reg_number
     *
     * @return string
     */
    public function getVehicleRegNumber()
    {
        return $this->container['vehicle_reg_number'];
    }

    /**
     * Sets vehicle_reg_number
     *
     * @param string $vehicle_reg_number Numer rejestracyjny środka transportu
     *
     * @return $this
     */
    public function setVehicleRegNumber($vehicle_reg_number)
    {
        $this->container['vehicle_reg_number'] = $vehicle_reg_number;

        return $this;
    }

    /**
     * Gets card_status
     *
     * @return string
     */
    public function getCardStatus()
    {
        return $this->container['card_status'];
    }

    /**
     * Sets card_status
     *
     * @param string $card_status Status Karty Przekazania Odpadów
     *
     * @return $this
     */
    public function setCardStatus($card_status)
    {
        $this->container['card_status'] = $card_status;

        return $this;
    }

    /**
     * Gets card_number
     *
     * @return string
     */
    public function getCardNumber()
    {
        return $this->container['card_number'];
    }

    /**
     * Sets card_number
     *
     * @param string $card_number Numer Karty Przekazania Odpadów
     *
     * @return $this
     */
    public function setCardNumber($card_number)
    {
        $this->container['card_number'] = $card_number;

        return $this;
    }

    /**
     * Gets card_status_code_name
     *
     * @return string
     */
    public function getCardStatusCodeName()
    {
        return $this->container['card_status_code_name'];
    }

    /**
     * Sets card_status_code_name
     *
     * @param string $card_status_code_name Oznaczenie kodowe statusu karty
     *
     * @return $this
     */
    public function setCardStatusCodeName($card_status_code_name)
    {
        $this->container['card_status_code_name'] = $card_status_code_name;

        return $this;
    }

    /**
     * Gets sender_name
     *
     * @return string
     */
    public function getSenderName()
    {
        return $this->container['sender_name'];
    }

    /**
     * Sets sender_name
     *
     * @param string $sender_name Nazwa
     *
     * @return $this
     */
    public function setSenderName($sender_name)
    {
        $this->container['sender_name'] = $sender_name;

        return $this;
    }

    /**
     * Gets receiver_name
     *
     * @return string
     */
    public function getReceiverName()
    {
        return $this->container['receiver_name'];
    }

    /**
     * Sets receiver_name
     *
     * @param string $receiver_name Nazwa przejmującego
     *
     * @return $this
     */
    public function setReceiverName($receiver_name)
    {
        $this->container['receiver_name'] = $receiver_name;

        return $this;
    }

    /**
     * Gets kpo_id
     *
     * @return string
     */
    public function getKpoId()
    {
        return $this->container['kpo_id'];
    }

    /**
     * Sets kpo_id
     *
     * @param string $kpo_id Id karty przekazania odpadów
     *
     * @return $this
     */
    public function setKpoId($kpo_id)
    {
        $this->container['kpo_id'] = $kpo_id;

        return $this;
    }

    /**
     * Gets kpo_last_modified_at
     *
     * @return \DateTime
     */
    public function getKpoLastModifiedAt()
    {
        return $this->container['kpo_last_modified_at'];
    }

    /**
     * Sets kpo_last_modified_at
     *
     * @param \DateTime $kpo_last_modified_at 
     *
     * @return $this
     */
    public function setKpoLastModifiedAt($kpo_last_modified_at)
    {
        $this->container['kpo_last_modified_at'] = $kpo_last_modified_at;

        return $this;
    }

    /**
     * Gets sender_first_name_and_last_name
     *
     * @return string
     */
    public function getSenderFirstNameAndLastName()
    {
        return $this->container['sender_first_name_and_last_name'];
    }

    /**
     * Sets sender_first_name_and_last_name
     *
     * @param string $sender_first_name_and_last_name Imię i Nazwisko przekazującego
     *
     * @return $this
     */
    public function setSenderFirstNameAndLastName($sender_first_name_and_last_name)
    {
        $this->container['sender_first_name_and_last_name'] = $sender_first_name_and_last_name;

        return $this;
    }

    /**
     * Gets receiver_first_and_last_name
     *
     * @return string
     */
    public function getReceiverFirstAndLastName()
    {
        return $this->container['receiver_first_and_last_name'];
    }

    /**
     * Sets receiver_first_and_last_name
     *
     * @param string $receiver_first_and_last_name Imię i Nazwisko przejmującego
     *
     * @return $this
     */
    public function setReceiverFirstAndLastName($receiver_first_and_last_name)
    {
        $this->container['receiver_first_and_last_name'] = $receiver_first_and_last_name;

        return $this;
    }

    /**
     * Gets revision_number
     *
     * @return int
     */
    public function getRevisionNumber()
    {
        return $this->container['revision_number'];
    }

    /**
     * Sets revision_number
     *
     * @param int $revision_number Numer korekty
     *
     * @return $this
     */
    public function setRevisionNumber($revision_number)
    {
        $this->container['revision_number'] = $revision_number;

        return $this;
    }

    /**
     * Gets card_rejection_time
     *
     * @return \DateTime
     */
    public function getCardRejectionTime()
    {
        return $this->container['card_rejection_time'];
    }

    /**
     * Sets card_rejection_time
     *
     * @param \DateTime $card_rejection_time Data odrzucenia
     *
     * @return $this
     */
    public function setCardRejectionTime($card_rejection_time)
    {
        $this->container['card_rejection_time'] = $card_rejection_time;

        return $this;
    }

    /**
     * Gets rejected_by_user_first_name_and_last_name
     *
     * @return string
     */
    public function getRejectedByUserFirstNameAndLastName()
    {
        return $this->container['rejected_by_user_first_name_and_last_name'];
    }

    /**
     * Sets rejected_by_user_first_name_and_last_name
     *
     * @param string $rejected_by_user_first_name_and_last_name Imię i Nazwisko osoby odrzucającej kartę
     *
     * @return $this
     */
    public function setRejectedByUserFirstNameAndLastName($rejected_by_user_first_name_and_last_name)
    {
        $this->container['rejected_by_user_first_name_and_last_name'] = $rejected_by_user_first_name_and_last_name;

        return $this;
    }

    /**
     * Gets receive_confirmation_time
     *
     * @return \DateTime
     */
    public function getReceiveConfirmationTime()
    {
        return $this->container['receive_confirmation_time'];
    }

    /**
     * Sets receive_confirmation_time
     *
     * @param \DateTime $receive_confirmation_time Data otrzymania potwierdzenia
     *
     * @return $this
     */
    public function setReceiveConfirmationTime($receive_confirmation_time)
    {
        $this->container['receive_confirmation_time'] = $receive_confirmation_time;

        return $this;
    }

    /**
     * Gets waste_code_extended
     *
     * @return bool
     */
    public function getWasteCodeExtended()
    {
        return $this->container['waste_code_extended'];
    }

    /**
     * Sets waste_code_extended
     *
     * @param bool $waste_code_extended Kod ex
     *
     * @return $this
     */
    public function setWasteCodeExtended($waste_code_extended)
    {
        $this->container['waste_code_extended'] = $waste_code_extended;

        return $this;
    }

    /**
     * Gets hazardous_waste_reclassification
     *
     * @return bool
     */
    public function getHazardousWasteReclassification()
    {
        return $this->container['hazardous_waste_reclassification'];
    }

    /**
     * Sets hazardous_waste_reclassification
     *
     * @param bool $hazardous_waste_reclassification Zmiana statusu odpadów niebezpiecznych na odpady inne niż niebezpieczne
     *
     * @return $this
     */
    public function setHazardousWasteReclassification($hazardous_waste_reclassification)
    {
        $this->container['hazardous_waste_reclassification'] = $hazardous_waste_reclassification;

        return $this;
    }

    /**
     * Gets waste_code_extended_description
     *
     * @return string
     */
    public function getWasteCodeExtendedDescription()
    {
        return $this->container['waste_code_extended_description'];
    }

    /**
     * Sets waste_code_extended_description
     *
     * @param string $waste_code_extended_description Rodzaj odpadu ex
     *
     * @return $this
     */
    public function setWasteCodeExtendedDescription($waste_code_extended_description)
    {
        $this->container['waste_code_extended_description'] = $waste_code_extended_description;

        return $this;
    }

    /**
     * Gets hazardous_waste_reclassification_description
     *
     * @return string
     */
    public function getHazardousWasteReclassificationDescription()
    {
        return $this->container['hazardous_waste_reclassification_description'];
    }

    /**
     * Sets hazardous_waste_reclassification_description
     *
     * @param string $hazardous_waste_reclassification_description Rodzaj odpadu
     *
     * @return $this
     */
    public function setHazardousWasteReclassificationDescription($hazardous_waste_reclassification_description)
    {
        $this->container['hazardous_waste_reclassification_description'] = $hazardous_waste_reclassification_description;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


